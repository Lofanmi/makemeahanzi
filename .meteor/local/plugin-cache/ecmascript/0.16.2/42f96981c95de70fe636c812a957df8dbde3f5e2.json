{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/lib/base.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"lib/base.js","filename":"/Users/a37/code/github/makemeahanzi-tool/lib/base.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/lib/base.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/base.js"}},"code":"!function (module1) {\n  module1.export({\n    assert: function () {\n      return assert;\n    },\n    getPWD: function () {\n      return getPWD;\n    },\n    maybeRequire: function () {\n      return maybeRequire;\n    },\n    Angle: function () {\n      return Angle;\n    },\n    Point: function () {\n      return Point;\n    }\n  });\n\n  // Prints the message and throws an error if the conditionis false.\n  var assert = function (condition, message) {\n    if (!condition) {\n      console.error(message);\n      throw new Error();\n    }\n  };\n\n  var isNumber = function (x) {\n    return Number.isFinite(x) && !Number.isNaN(x);\n  };\n\n  var maybeRequire = function (module) {\n    return Meteor.isServer ? Npm.require(module) : null;\n  };\n\n  var getPWD = null;\n\n  if (Meteor.isServer) {\n    Meteor.npmRequire('es6-shim');\n\n    var path = Npm.require('path');\n\n    module1.runSetters(getPWD = function () {\n      // TODO(skishore): The next line makes assumptions about the Meteor build\n      // directory's structure. We should replace it with a Meteor-provided API.\n      return process.env && process.env.PWD ? process.env.PWD : path.join(process.cwd(), '../../../..');\n    }, [\"getPWD\"]);\n  } // Returns a list of the unique values in the given array, ordered by their\n  // first appearance in the array.\n\n\n  Array.prototype.unique = function () {\n    var result = [];\n    var seen = {};\n    this.map(function (x) {\n      if (!seen[x]) {\n        result.push(x);\n        seen[x] = true;\n      }\n    });\n    return result;\n  }; // Given a string and a dict mapping characters to other characters, return a\n  // string with that mapping applied to each of its characters.\n\n\n  String.prototype.applyMapping = function (mapping) {\n    var result = '';\n\n    for (var i = 0; i < this.length; i++) {\n      result += mapping[this[i]] ? mapping[this[i]] : this[i];\n    }\n\n    return result;\n  }; // Helper methods for use with angles, which are floats in [-pi, pi).\n\n\n  var Angle = {\n    subtract: function (angle1, angle2) {\n      var result = angle1 - angle2;\n\n      if (result < -Math.PI) {\n        result += 2 * Math.PI;\n      }\n\n      if (result >= Math.PI) {\n        result -= 2 * Math.PI;\n      }\n\n      return result;\n    },\n    penalty: function (diff) {\n      return diff * diff;\n    }\n  }; // Helper methods for use with \"points\", which are pairs of integers.\n\n  var Point = {\n    add: function (point1, point2) {\n      return [point1[0] + point2[0], point1[1] + point2[1]];\n    },\n    angle: function (point) {\n      return Math.atan2(point[1], point[0]);\n    },\n    clone: function (point) {\n      return [point[0], point[1]];\n    },\n    distance2: function (point1, point2) {\n      var diff = Point.subtract(point1, point2);\n      return Math.pow(diff[0], 2) + Math.pow(diff[1], 2);\n    },\n    dot: function (point1, point2) {\n      return point1[0] * point2[0] + point1[1] * point2[1];\n    },\n    equal: function (point1, point2) {\n      return point1[0] === point2[0] && point1[1] === point2[1];\n    },\n    key: function (point) {\n      return point.join(',');\n    },\n    midpoint: function (point1, point2) {\n      return [(point1[0] + point2[0]) / 2, (point1[1] + point2[1]) / 2];\n    },\n    subtract: function (point1, point2) {\n      return [point1[0] - point2[0], point1[1] - point2[1]];\n    },\n    valid: function (point) {\n      return isNumber(point[0]) && isNumber(point[1]);\n    }\n  };\n}.call(this, module);","map":{"version":3,"sources":["lib/base.js"],"names":["module1","export","assert","getPWD","maybeRequire","Angle","Point","condition","message","console","error","Error","isNumber","x","Number","isFinite","isNaN","module","Meteor","isServer","Npm","require","npmRequire","path","process","env","PWD","join","cwd","Array","prototype","unique","result","seen","map","push","String","applyMapping","mapping","i","length","subtract","angle1","angle2","Math","PI","penalty","diff","add","point1","point2","angle","point","atan2","clone","distance2","pow","dot","equal","key","midpoint","valid"],"mappings":"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","sourcesContent":["// Prints the message and throws an error if the conditionis false.\nconst assert = (condition, message) => {\n  if (!condition) {\n    console.error(message);\n    throw new Error;\n  }\n}\n\nconst isNumber = (x) => Number.isFinite(x) && !Number.isNaN(x);\n\nconst maybeRequire = (module) => Meteor.isServer ? Npm.require(module) : null;\n\nlet getPWD = null;\n\nif (Meteor.isServer) {\n  Meteor.npmRequire('es6-shim');\n  const path = Npm.require('path');\n\n  getPWD = () => {\n    // TODO(skishore): The next line makes assumptions about the Meteor build\n    // directory's structure. We should replace it with a Meteor-provided API.\n    return process.env && process.env.PWD ?\n        process.env.PWD : path.join(process.cwd(), '../../../..');\n  }\n}\n\n// Returns a list of the unique values in the given array, ordered by their\n// first appearance in the array.\nArray.prototype.unique = function() {\n  const result = [];\n  const seen = {};\n  this.map((x) => {\n    if (!seen[x]) {\n      result.push(x);\n      seen[x] = true;\n    }\n  });\n  return result;\n}\n\n// Given a string and a dict mapping characters to other characters, return a\n// string with that mapping applied to each of its characters.\nString.prototype.applyMapping = function(mapping) {\n  let result = '';\n  for (let i = 0; i < this.length; i++) {\n    result += mapping[this[i]] ? mapping[this[i]] : this[i];\n  }\n  return result;\n}\n\n// Helper methods for use with angles, which are floats in [-pi, pi).\nconst Angle = {\n  subtract: (angle1, angle2) => {\n    var result = angle1 - angle2;\n    if (result < -Math.PI) {\n      result += 2*Math.PI;\n    }\n    if (result >= Math.PI) {\n      result -= 2*Math.PI;\n    }\n    return result;\n  },\n  penalty: (diff) => diff*diff,\n};\n\n// Helper methods for use with \"points\", which are pairs of integers.\nconst Point = {\n  add: (point1, point2) => [point1[0] + point2[0], point1[1] + point2[1]],\n  angle: (point) => Math.atan2(point[1], point[0]),\n  clone: (point) => [point[0], point[1]],\n  distance2(point1, point2) {\n    var diff = Point.subtract(point1, point2);\n    return Math.pow(diff[0], 2) + Math.pow(diff[1], 2);\n  },\n  dot: (point1, point2) => point1[0]*point2[0] + point1[1]*point2[1],\n  equal: (point1, point2) => point1[0] === point2[0] && point1[1] === point2[1],\n  key: (point) => point.join(','),\n  midpoint: (point1, point2) => {\n    return [(point1[0] + point2[0])/2, (point1[1] + point2[1])/2];\n  },\n  subtract: (point1, point2) => [point1[0] - point2[0], point1[1] - point2[1]],\n  valid: (point) => isNumber(point[0]) && isNumber(point[1]),\n};\n\nexport {assert, getPWD, maybeRequire, Angle, Point};\n"]},"sourceType":"module","externalDependencies":{},"hash":"42f96981c95de70fe636c812a957df8dbde3f5e2"}
