{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/bridges.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/bridges.js"}},"code":"var _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  BridgesStage: function () {\n    return BridgesStage;\n  }\n});\nvar AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage: function (v) {\n    AbstractStage = v;\n  }\n}, 0);\nvar Point;\nmodule.link(\"/lib/base\", {\n  Point: function (v) {\n    Point = v;\n  }\n}, 1);\nvar stroke_extractor;\nmodule.link(\"/lib/stroke_extractor\", {\n  stroke_extractor: function (v) {\n    stroke_extractor = v;\n  }\n}, 2);\n\nvar bridgeKey = function (bridge) {\n  return bridge.map(Point.key).join('-');\n};\n\nvar removeBridge = function (bridges, bridge) {\n  var keys = {};\n  keys[bridgeKey(bridge)] = true;\n  keys[bridgeKey([bridge[1], bridge[0]])] = true;\n  return bridges.filter(function (bridge) {\n    return !keys[bridgeKey(bridge)];\n  });\n};\n\nvar BridgesStage = /*#__PURE__*/function (_AbstractStage) {\n  _inheritsLoose(BridgesStage, _AbstractStage);\n\n  function BridgesStage(glyph) {\n    var _this;\n\n    _this = _AbstractStage.call(this, 'bridges') || this;\n    var bridges = stroke_extractor.getBridges(glyph.stages.path);\n    _this.original = bridges.bridges;\n    _this.adjusted = glyph.stages.bridges || _this.original;\n    _this.endpoints = bridges.endpoints.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n    _this.path = glyph.stages.path;\n    _this.selected_point = undefined;\n    return _this;\n  }\n\n  var _proto = BridgesStage.prototype;\n\n  _proto.handleClickOnBridge = function () {\n    function handleClickOnBridge(bridge) {\n      this.adjusted = removeBridge(this.adjusted, bridge);\n    }\n\n    return handleClickOnBridge;\n  }();\n\n  _proto.handleClickOnPoint = function () {\n    function handleClickOnPoint(point) {\n      if (this.selected_point === undefined) {\n        this.selected_point = point;\n        return;\n      } else if (Point.equal(point, this.selected_point)) {\n        this.selected_point = undefined;\n        return;\n      }\n\n      var bridge = [point, this.selected_point];\n      this.selected_point = undefined;\n      var without = removeBridge(this.adjusted, bridge);\n\n      if (without.length < this.adjusted.length) {\n        return;\n      }\n\n      this.adjusted.push(bridge);\n    }\n\n    return handleClickOnPoint;\n  }();\n\n  _proto.handleEvent = function () {\n    function handleEvent(event, template) {\n      if (template.x1 !== undefined) {\n        var bridge = [[template.x1, template.y1], [template.x2, template.y2]];\n        this.handleClickOnBridge(bridge);\n      } else if (template.cx !== undefined) {\n        this.handleClickOnPoint([template.cx, template.cy]);\n      }\n    }\n\n    return handleEvent;\n  }();\n\n  _proto.refreshUI = function () {\n    function refreshUI() {\n      var _this2 = this;\n\n      Session.set('stage.paths', [{\n        d: this.path,\n        fill: 'gray',\n        stroke: 'gray'\n      }]);\n      var keys = {};\n      this.original.map(function (bridge) {\n        keys[bridgeKey(bridge)] = true;\n        keys[bridgeKey([bridge[1], bridge[0]])] = true;\n      });\n      Session.set('stage.lines', this.adjusted.map(function (bridge) {\n        return {\n          cls: 'selectable',\n          stroke: keys[bridgeKey(bridge)] ? 'red' : 'purple',\n          x1: bridge[0][0],\n          y1: bridge[0][1],\n          x2: bridge[1][0],\n          y2: bridge[1][1]\n        };\n      }));\n      Session.set('stage.points', this.endpoints.map(function (endpoint) {\n        var color = endpoint.corner ? 'red' : 'black';\n\n        if (_this2.selected_point && Point.equal(endpoint.point, _this2.selected_point)) {\n          color = 'purple';\n        }\n\n        return {\n          cls: 'selectable',\n          cx: endpoint.point[0],\n          cy: endpoint.point[1],\n          fill: color,\n          stroke: color\n        };\n      }));\n      var strokes = stroke_extractor.getStrokes(this.path, this.adjusted);\n      var n = strokes.strokes.length;\n      var message = \"Extracted \" + n + \" stroke\" + (n == 1 ? '' : 's') + \".\";\n      var entry = {\n        cls: 'success',\n        message: message\n      };\n      Session.set('stage.status', strokes.log.concat([entry]));\n    }\n\n    return refreshUI;\n  }();\n\n  return BridgesStage;\n}(AbstractStage);","map":{"version":3,"sources":["client/lib/bridges.js"],"names":["_inheritsLoose","module","link","default","v","export","BridgesStage","AbstractStage","Point","stroke_extractor","bridgeKey","bridge","map","key","join","removeBridge","bridges","keys","filter","glyph","getBridges","stages","path","original","adjusted","endpoints","reduce","x","y","concat","selected_point","undefined","handleClickOnBridge","handleClickOnPoint","point","equal","without","length","push","handleEvent","event","template","x1","y1","x2","y2","cx","cy","refreshUI","Session","set","d","fill","stroke","cls","endpoint","color","corner","strokes","getStrokes","n","message","entry","log"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {Point} from '/lib/base';\nimport {stroke_extractor} from '/lib/stroke_extractor';\n\nconst bridgeKey = (bridge) => bridge.map(Point.key).join('-');\n\nconst removeBridge = (bridges, bridge) => {\n  const keys = {};\n  keys[bridgeKey(bridge)] = true;\n  keys[bridgeKey([bridge[1], bridge[0]])] = true;\n  return bridges.filter((bridge) => !keys[bridgeKey(bridge)]);\n}\n\nclass BridgesStage extends AbstractStage {\n  constructor(glyph) {\n    super('bridges');\n    const bridges = stroke_extractor.getBridges(glyph.stages.path);\n    this.original = bridges.bridges;\n    this.adjusted = glyph.stages.bridges || this.original;\n    this.endpoints = bridges.endpoints.reduce((x, y) => x.concat(y), []);\n    this.path = glyph.stages.path;\n    this.selected_point = undefined;\n  }\n  handleClickOnBridge(bridge) {\n    this.adjusted = removeBridge(this.adjusted, bridge);\n  }\n  handleClickOnPoint(point) {\n    if (this.selected_point === undefined) {\n      this.selected_point = point;\n      return;\n    } else if (Point.equal(point, this.selected_point)) {\n      this.selected_point = undefined;\n      return;\n    }\n    const bridge = [point, this.selected_point];\n    this.selected_point = undefined;\n    const without = removeBridge(this.adjusted, bridge);\n    if (without.length < this.adjusted.length) {\n      return;\n    }\n    this.adjusted.push(bridge);\n  }\n  handleEvent(event, template) {\n    if (template.x1 !== undefined) {\n      const bridge = [[template.x1, template.y1], [template.x2, template.y2]];\n      this.handleClickOnBridge(bridge);\n    } else if (template.cx !== undefined) {\n      this.handleClickOnPoint([template.cx, template.cy]);\n    }\n  }\n  refreshUI() {\n    Session.set('stage.paths', [{d: this.path, fill: 'gray', stroke: 'gray'}]);\n    const keys = {};\n    this.original.map((bridge) => {\n      keys[bridgeKey(bridge)] = true;\n      keys[bridgeKey([bridge[1], bridge[0]])] = true;\n    });\n    Session.set('stage.lines', this.adjusted.map((bridge) => ({\n      cls: 'selectable',\n      stroke: keys[bridgeKey(bridge)] ? 'red' : 'purple',\n      x1: bridge[0][0],\n      y1: bridge[0][1],\n      x2: bridge[1][0],\n      y2: bridge[1][1],\n    })));\n    Session.set('stage.points', this.endpoints.map((endpoint) => {\n      let color = endpoint.corner ? 'red' : 'black';\n      if (this.selected_point &&\n          Point.equal(endpoint.point, this.selected_point)) {\n        color = 'purple';\n      }\n      return {\n        cls: 'selectable',\n        cx: endpoint.point[0],\n        cy: endpoint.point[1],\n        fill: color,\n        stroke: color,\n      }\n    }));\n    const strokes = stroke_extractor.getStrokes(this.path, this.adjusted);\n    const n = strokes.strokes.length;\n    const message = `Extracted ${n} stroke${n == 1 ? '' : 's'}.`;\n    const entry = {cls: 'success', message: message};\n    Session.set('stage.status', strokes.log.concat([entry]));\n  }\n}\n\nexport {BridgesStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"a67061b123969177154b2d98f82e45ebcaabea6f"}
