{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/metadata.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/metadata.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/metadata.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/metadata.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/metadata.js"}},"code":"let assert;\nmodule.link(\"/lib/base\", {\n  assert(v) {\n    assert = v;\n  }\n\n}, 0);\nlet cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib(v) {\n    cjklib = v;\n  }\n\n}, 1);\nlet pinyin_util;\nmodule.link(\"/lib/pinyin_util\", {\n  pinyin_util(v) {\n    pinyin_util = v;\n  }\n\n}, 2);\nconst unknown = '(unknown)';\n\nconst parseIntWithValidation = text => {\n  const result = parseInt(text, 10);\n  assert(!Number.isNaN(result));\n  return result;\n};\n\nconst parsePinyin = text => {\n  const pinyin = text.split(',').map(x => x.trim()).filter(x => x.length);\n  return pinyin.map(pinyin_util.numberedPinyinToTonePinyin).join(', ');\n};\n\nconst validators = {\n  pinyin: parsePinyin,\n  strokes: parseIntWithValidation\n}; // We avoid arrow functions in this map so that this is bound to the template.\n\nTemplate.metadata.events({\n  'blur .value': function (event) {\n    const text = $(event.target).text();\n    let value = text && text !== unknown ? text : null;\n\n    if (value && validators.hasOwnProperty(this.field)) {\n      try {\n        value = validators[this.field](text);\n      } catch (error) {\n        console.log(error);\n        value = null;\n      }\n    }\n\n    const glyph = Session.get('editor.glyph');\n    const defaults = cjklib.getCharacterData(glyph.character);\n\n    if (value === defaults[this.field]) {\n      value = null;\n    }\n\n    if (value !== glyph.metadata[this.field] && (value || glyph.metadata[this.field])) {\n      glyph.metadata[this.field] = value;\n      Session.set('editor.glyph', glyph);\n    } else {\n      $(event.target).text(value || defaults[this.field] || unknown);\n    }\n  }\n});\nTemplate.metadata.helpers({\n  character() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    return glyph.character;\n  },\n\n  display() {\n    return Session.get('stage.type') === 'order' ? 'none' : undefined;\n  },\n\n  items() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    const defaults = cjklib.getCharacterData(glyph.character);\n    const fields = ['definition', 'pinyin', 'strokes'];\n    const result = fields.map(x => ({\n      field: x,\n      label: \"\".concat(x[0].toUpperCase()).concat(x.substr(1), \":\"),\n      value: glyph.metadata[x] || defaults[x] || unknown\n    }));\n\n    if (cjklib.radicals.radical_to_index_map.hasOwnProperty(glyph.character)) {\n      const index = cjklib.radicals.radical_to_index_map[glyph.character];\n      const primary = cjklib.radicals.primary_radical[index];\n      result[0].separator = '; ';\n      result[0].extra = \"Kangxi radical \".concat(index);\n\n      if (glyph.character !== primary) {\n        result[0].separator += 'variant of ';\n        result[0].extra = \"<a class=\\\"link\\\" href=\\\"#\".concat(primary, \"\\\">\") + \"\".concat(result[0].extra, \" \").concat(primary, \"</a>\");\n      }\n    }\n\n    return result;\n  },\n\n  rank() {\n    const glyph = Session.get('editor.glyph');\n    return glyph && glyph.metadata.frequency || '?';\n  },\n\n  references() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    const character = glyph.character;\n    return [{\n      href: 'http://www.archchinese.com/chinese_english_dictionary.html' + \"?find=\".concat(character),\n      label: 'Arch Chinese'\n    }, {\n      href: 'http://www.mdbg.net/chindict/chindict.php?page=worddict' + \"&wdrst=0&wdqb=\".concat(character),\n      label: 'MDBG'\n    }, {\n      href: \"https://en.wiktionary.org/wiki/\".concat(character),\n      label: 'Wiktionary'\n    }, {\n      href: 'http://www.yellowbridge.com/chinese/character-etymology.php' + \"?zi=\".concat(character),\n      label: 'YellowBridge'\n    }];\n  },\n\n  simplified() {\n    const glyph = Session.get('editor.glyph');\n    return glyph && glyph.simplified;\n  }\n\n});","map":{"version":3,"sources":["client/metadata.js"],"names":["assert","module","link","v","cjklib","pinyin_util","unknown","parseIntWithValidation","text","result","parseInt","Number","isNaN","parsePinyin","pinyin","split","map","x","trim","filter","length","numberedPinyinToTonePinyin","join","validators","strokes","Template","metadata","events","event","$","target","value","hasOwnProperty","field","error","console","log","glyph","Session","get","defaults","getCharacterData","character","set","helpers","display","undefined","items","fields","label","toUpperCase","substr","radicals","radical_to_index_map","index","primary","primary_radical","separator","extra","rank","frequency","references","href","simplified"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAAxB,EAA8C,CAA9C;AAAiD,IAAIC,MAAJ;AAAWH,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACE,EAAAA,MAAM,CAACD,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAApB,CAA1B,EAAgD,CAAhD;AAAmD,IAAIE,WAAJ;AAAgBJ,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACG,EAAAA,WAAW,CAACF,CAAD,EAAG;AAACE,IAAAA,WAAW,GAACF,CAAZ;AAAc;;AAA9B,CAA/B,EAA+D,CAA/D;AAI1I,MAAMG,OAAO,GAAG,WAAhB;;AAEA,MAAMC,sBAAsB,GAAIC,IAAD,IAAU;AACvC,QAAMC,MAAM,GAAGC,QAAQ,CAACF,IAAD,EAAO,EAAP,CAAvB;AACAR,EAAAA,MAAM,CAAC,CAACW,MAAM,CAACC,KAAP,CAAaH,MAAb,CAAF,CAAN;AACA,SAAOA,MAAP;AACD,CAJD;;AAMA,MAAMI,WAAW,GAAIL,IAAD,IAAU;AAC5B,QAAMM,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA3B,EAAqCC,MAArC,CAA6CF,CAAD,IAAOA,CAAC,CAACG,MAArD,CAAf;AACA,SAAON,MAAM,CAACE,GAAP,CAAWX,WAAW,CAACgB,0BAAvB,EAAmDC,IAAnD,CAAwD,IAAxD,CAAP;AACD,CAHD;;AAKA,MAAMC,UAAU,GAAG;AACjBT,EAAAA,MAAM,EAAED,WADS;AAEjBW,EAAAA,OAAO,EAAEjB;AAFQ,CAAnB,C,CAKA;;AACAkB,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,CAAyB;AACvB,iBAAe,UAASC,KAAT,EAAgB;AAC7B,UAAMpB,IAAI,GAAGqB,CAAC,CAACD,KAAK,CAACE,MAAP,CAAD,CAAgBtB,IAAhB,EAAb;AACA,QAAIuB,KAAK,GAAIvB,IAAI,IAAIA,IAAI,KAAKF,OAAjB,GAA2BE,IAA3B,GAAkC,IAA/C;;AACA,QAAIuB,KAAK,IAAIR,UAAU,CAACS,cAAX,CAA0B,KAAKC,KAA/B,CAAb,EAAoD;AAClD,UAAI;AACFF,QAAAA,KAAK,GAAGR,UAAU,CAAC,KAAKU,KAAN,CAAV,CAAuBzB,IAAvB,CAAR;AACD,OAFD,CAEE,OAAO0B,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,QAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AACD,UAAMM,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,UAAMC,QAAQ,GAAGpC,MAAM,CAACqC,gBAAP,CAAwBJ,KAAK,CAACK,SAA9B,CAAjB;;AACA,QAAIX,KAAK,KAAKS,QAAQ,CAAC,KAAKP,KAAN,CAAtB,EAAoC;AAClCF,MAAAA,KAAK,GAAG,IAAR;AACD;;AACD,QAAIA,KAAK,KAAKM,KAAK,CAACX,QAAN,CAAe,KAAKO,KAApB,CAAV,KACCF,KAAK,IAAIM,KAAK,CAACX,QAAN,CAAe,KAAKO,KAApB,CADV,CAAJ,EAC2C;AACzCI,MAAAA,KAAK,CAACX,QAAN,CAAe,KAAKO,KAApB,IAA6BF,KAA7B;AACAO,MAAAA,OAAO,CAACK,GAAR,CAAY,cAAZ,EAA4BN,KAA5B;AACD,KAJD,MAIO;AACLR,MAAAA,CAAC,CAACD,KAAK,CAACE,MAAP,CAAD,CAAgBtB,IAAhB,CAAqBuB,KAAK,IAAIS,QAAQ,CAAC,KAAKP,KAAN,CAAjB,IAAiC3B,OAAtD;AACD;AACF;AAxBsB,CAAzB;AA2BAmB,QAAQ,CAACC,QAAT,CAAkBkB,OAAlB,CAA0B;AACxBF,EAAAA,SAAS,GAAG;AACV,UAAML,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,QAAI,CAACF,KAAL,EAAY;AACZ,WAAOA,KAAK,CAACK,SAAb;AACD,GALuB;;AAMxBG,EAAAA,OAAO,GAAG;AACR,WAAOP,OAAO,CAACC,GAAR,CAAY,YAAZ,MAA8B,OAA9B,GAAwC,MAAxC,GAAiDO,SAAxD;AACD,GARuB;;AASxBC,EAAAA,KAAK,GAAG;AACN,UAAMV,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,QAAI,CAACF,KAAL,EAAY;AACZ,UAAMG,QAAQ,GAAGpC,MAAM,CAACqC,gBAAP,CAAwBJ,KAAK,CAACK,SAA9B,CAAjB;AACA,UAAMM,MAAM,GAAG,CAAC,YAAD,EAAe,QAAf,EAAyB,SAAzB,CAAf;AACA,UAAMvC,MAAM,GAAGuC,MAAM,CAAChC,GAAP,CAAYC,CAAD,KAAQ;AAChCgB,MAAAA,KAAK,EAAEhB,CADyB;AAEhCgC,MAAAA,KAAK,YAAKhC,CAAC,CAAC,CAAD,CAAD,CAAKiC,WAAL,EAAL,SAA0BjC,CAAC,CAACkC,MAAF,CAAS,CAAT,CAA1B,MAF2B;AAGhCpB,MAAAA,KAAK,EAAEM,KAAK,CAACX,QAAN,CAAeT,CAAf,KAAqBuB,QAAQ,CAACvB,CAAD,CAA7B,IAAoCX;AAHX,KAAR,CAAX,CAAf;;AAKA,QAAIF,MAAM,CAACgD,QAAP,CAAgBC,oBAAhB,CAAqCrB,cAArC,CAAoDK,KAAK,CAACK,SAA1D,CAAJ,EAA0E;AACxE,YAAMY,KAAK,GAAGlD,MAAM,CAACgD,QAAP,CAAgBC,oBAAhB,CAAqChB,KAAK,CAACK,SAA3C,CAAd;AACA,YAAMa,OAAO,GAAGnD,MAAM,CAACgD,QAAP,CAAgBI,eAAhB,CAAgCF,KAAhC,CAAhB;AACA7C,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUgD,SAAV,GAAsB,IAAtB;AACAhD,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUiD,KAAV,4BAAoCJ,KAApC;;AACA,UAAIjB,KAAK,CAACK,SAAN,KAAoBa,OAAxB,EAAiC;AAC/B9C,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAUgD,SAAV,IAAuB,aAAvB;AACAhD,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAUiD,KAAV,GAAkB,oCAA0BH,OAA1B,qBACG9C,MAAM,CAAC,CAAD,CAAN,CAAUiD,KADb,cACsBH,OADtB,SAAlB;AAED;AACF;;AACD,WAAO9C,MAAP;AACD,GA/BuB;;AAgCxBkD,EAAAA,IAAI,GAAG;AACL,UAAMtB,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,WAAQF,KAAK,IAAIA,KAAK,CAACX,QAAN,CAAekC,SAAzB,IAAuC,GAA9C;AACD,GAnCuB;;AAoCxBC,EAAAA,UAAU,GAAG;AACX,UAAMxB,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,QAAI,CAACF,KAAL,EAAY;AACZ,UAAMK,SAAS,GAAGL,KAAK,CAACK,SAAxB;AACA,WAAO,CAAC;AACNoB,MAAAA,IAAI,EAAE,+EACSpB,SADT,CADA;AAGNO,MAAAA,KAAK,EAAE;AAHD,KAAD,EAIJ;AACDa,MAAAA,IAAI,EAAE,oFACiBpB,SADjB,CADL;AAGDO,MAAAA,KAAK,EAAE;AAHN,KAJI,EAQJ;AACDa,MAAAA,IAAI,2CAAoCpB,SAApC,CADH;AAEDO,MAAAA,KAAK,EAAE;AAFN,KARI,EAWJ;AACDa,MAAAA,IAAI,EAAE,8EACOpB,SADP,CADL;AAGDO,MAAAA,KAAK,EAAE;AAHN,KAXI,CAAP;AAgBD,GAxDuB;;AAyDxBc,EAAAA,UAAU,GAAG;AACX,UAAM1B,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAd;AACA,WAAOF,KAAK,IAAIA,KAAK,CAAC0B,UAAtB;AACD;;AA5DuB,CAA1B","sourcesContent":["import {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\nimport {pinyin_util} from '/lib/pinyin_util';\n\nconst unknown = '(unknown)';\n\nconst parseIntWithValidation = (text) => {\n  const result = parseInt(text, 10);\n  assert(!Number.isNaN(result));\n  return result;\n}\n\nconst parsePinyin = (text) => {\n  const pinyin = text.split(',').map((x) => x.trim()).filter((x) => x.length);\n  return pinyin.map(pinyin_util.numberedPinyinToTonePinyin).join(', ');\n}\n\nconst validators = {\n  pinyin: parsePinyin,\n  strokes: parseIntWithValidation,\n};\n\n// We avoid arrow functions in this map so that this is bound to the template.\nTemplate.metadata.events({\n  'blur .value': function(event) {\n    const text = $(event.target).text();\n    let value = (text && text !== unknown ? text : null);\n    if (value && validators.hasOwnProperty(this.field)) {\n      try {\n        value = validators[this.field](text);\n      } catch (error) {\n        console.log(error);\n        value = null;\n      }\n    }\n    const glyph = Session.get('editor.glyph');\n    const defaults = cjklib.getCharacterData(glyph.character);\n    if (value === defaults[this.field]) {\n      value = null;\n    }\n    if (value !== glyph.metadata[this.field] &&\n        (value || glyph.metadata[this.field])) {\n      glyph.metadata[this.field] = value;\n      Session.set('editor.glyph', glyph);\n    } else {\n      $(event.target).text(value || defaults[this.field] || unknown);\n    }\n  },\n});\n\nTemplate.metadata.helpers({\n  character() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    return glyph.character;\n  },\n  display() {\n    return Session.get('stage.type') === 'order' ? 'none' : undefined;\n  },\n  items() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    const defaults = cjklib.getCharacterData(glyph.character);\n    const fields = ['definition', 'pinyin', 'strokes']\n    const result = fields.map((x) => ({\n      field: x,\n      label: `${x[0].toUpperCase()}${x.substr(1)}:`,\n      value: glyph.metadata[x] || defaults[x] || unknown,\n    }));\n    if (cjklib.radicals.radical_to_index_map.hasOwnProperty(glyph.character)) {\n      const index = cjklib.radicals.radical_to_index_map[glyph.character];\n      const primary = cjklib.radicals.primary_radical[index];\n      result[0].separator = '; ';\n      result[0].extra = `Kangxi radical ${index}`;\n      if (glyph.character !== primary) {\n        result[0].separator += 'variant of ';\n        result[0].extra = `<a class=\"link\" href=\"#${primary}\">` +\n                          `${result[0].extra} ${primary}</a>`;\n      }\n    }\n    return result;\n  },\n  rank() {\n    const glyph = Session.get('editor.glyph');\n    return (glyph && glyph.metadata.frequency) || '?';\n  },\n  references() {\n    const glyph = Session.get('editor.glyph');\n    if (!glyph) return;\n    const character = glyph.character;\n    return [{\n      href: 'http://www.archchinese.com/chinese_english_dictionary.html' +\n            `?find=${character}`,\n      label: 'Arch Chinese',\n    }, {\n      href: 'http://www.mdbg.net/chindict/chindict.php?page=worddict' +\n            `&wdrst=0&wdqb=${character}`,\n      label: 'MDBG',\n    }, {\n      href: `https://en.wiktionary.org/wiki/${character}`,\n      label: 'Wiktionary',\n    }, {\n      href: 'http://www.yellowbridge.com/chinese/character-etymology.php' +\n            `?zi=${character}`,\n      label: 'YellowBridge',\n    }];\n  },\n  simplified() {\n    const glyph = Session.get('editor.glyph');\n    return glyph && glyph.simplified;\n  },\n});\n"]},"sourceType":"module","externalDependencies":{},"hash":"c3ec76465f04fc20b1600a2a66385d2b82d17757"}
