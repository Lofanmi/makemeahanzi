{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/analysis.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/analysis.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/analysis.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/analysis.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/analysis.js"}},"code":"var _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 0);\n\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 1);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 2);\nmodule.export({\n  AnalysisStage: function () {\n    return AnalysisStage;\n  }\n});\nvar AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage: function (v) {\n    AbstractStage = v;\n  }\n}, 0);\nvar assert;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  }\n}, 1);\nvar cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib: function (v) {\n    cjklib = v;\n  }\n}, 2);\nvar decomposition_util;\nmodule.link(\"/lib/decomposition_util\", {\n  decomposition_util: function (v) {\n    decomposition_util = v;\n  }\n}, 3);\nvar Glyphs;\nmodule.link(\"/lib/glyphs\", {\n  Glyphs: function (v) {\n    Glyphs = v;\n  }\n}, 4);\nvar pinyin_util;\nmodule.link(\"/lib/pinyin_util\", {\n  pinyin_util: function (v) {\n    pinyin_util = v;\n  }\n}, 5);\nvar stage = undefined;\nvar etymology_fields = ['hint', 'phonetic', 'semantic']; // Methods for querying and modifying decomposition trees.\n\nvar collectComponents = function (subtree) {\n  return subtree ? decomposition_util.collectComponents(subtree) : [];\n};\n\nvar fixSubtreeChildrenLength = function (subtree) {\n  var data = decomposition_util.ids_data[subtree.value];\n  assert(data, \"Invalid ideograph description character: \" + subtree.value);\n  subtree.children.length = data.arity;\n\n  for (var i = 0; i < subtree.children.length; i++) {\n    subtree.children[i] = subtree.children[i] || {\n      type: 'character',\n      value: '?'\n    };\n    subtree.children[i].path = subtree.path.concat([i]);\n  }\n};\n\nvar setSubtreeType = function (subtree, type) {\n  if (subtree.type === type) {\n    return;\n  }\n\n  if (type === 'character') {\n    subtree.value = '?';\n    delete subtree.children;\n  } else if (type === 'compound') {\n    subtree.value = decomposition_util.ideograph_description_characters[0];\n    subtree.children = [];\n    fixSubtreeChildrenLength(subtree);\n  } else {\n    assert(false, \"Unexpected subtree type: \" + type);\n  }\n\n  subtree.type = type;\n}; // Methods for handling updates to various non-decomposition analysis fields.\n\n\nvar updateCharacterValue = function (target, text, path) {\n  var subtree = decomposition_util.getSubtree(stage.tree, path);\n\n  if (text === subtree.value || subtree.type !== 'character') {\n    return;\n  }\n\n  var value = text.length === 1 ? text : '?';\n\n  if (value === subtree.value) {\n    target.text(value);\n  } else {\n    subtree.value = text.length === 1 ? text : '?';\n    stage.forceRefresh();\n  }\n};\n\nvar updateEtymology = function (target, text, type) {\n  var value = text && text !== '?' ? text : undefined;\n  var expansion = ' aptp';\n\n  if (type === 'hint' && value && value.endsWith(expansion)) {\n    var suffix = 'also provides the pronunciation';\n    value = value.substr(0, value.length - expansion.length) + \" \" + suffix;\n  }\n\n  if (value === stage.etymology[type]) {\n    target.text(value || '?');\n  } else {\n    stage.etymology[type] = value;\n    stage.forceRefresh();\n  }\n};\n\nvar updateRadicalValue = function (target, text) {\n  var value = text && text !== '?' ? text : undefined;\n\n  if (value === stage.radical) {\n    target.text(value || '?');\n  } else {\n    stage.radical = value;\n    stage.forceRefresh();\n  }\n}; // Methods for initializing different fields of the analysis.\n\n\nvar initializeDecompositionTree = function (analysis, character) {\n  var data = cjklib.getCharacterData(character);\n  return decomposition_util.convertDecompositionToTree(analysis.decomposition || data.decomposition);\n};\n\nvar initializeRadical = function (character, components) {\n  if (cjklib.radicals.radical_to_index_map.hasOwnProperty(character)) {\n    return character;\n  }\n\n  var data = cjklib.getCharacterData(character);\n\n  if (data.kangxi_index) {\n    var index = data.kangxi_index[0];\n    var radicals = cjklib.radicals.index_to_radical_map[index];\n    var included = radicals.filter(function (x) {\n      return components.indexOf(x) >= 0;\n    });\n    return included.length === 1 ? included[0] : radicals.join('');\n  }\n\n  return undefined;\n};\n\nvar initializeEtymology = function (glyph, components) {\n  var data = cjklib.getCharacterData(glyph.character);\n  var target = pinyin_util.dropTones(glyph.metadata.pinyin || data.pinyin || '');\n\n  var phonetic_match = function (component) {\n    var component_data = cjklib.getCharacterData(component);\n    var attempt = pinyin_util.dropTones(component_data.pinyin || '');\n    return attempt && attempt === target;\n  };\n\n  var phonetic = components.filter(phonetic_match);\n\n  if (phonetic.length === 1) {\n    var result = {\n      type: 'pictophonetic',\n      phonetic: phonetic[0]\n    };\n    var semantic = components.filter(function (x) {\n      return !phonetic_match(x);\n    });\n\n    if (semantic.length === 1) {\n      result.semantic = semantic[0];\n    }\n\n    return result;\n  }\n\n  return {\n    type: 'ideographic'\n  };\n}; // Methods for automatically inferring a phonetic-semantic decomposition.\n\n\nvar doubleAlphabeticCharacters = function (pinyin) {\n  var numbered = pinyin_util.tonePinyinToNumberedPinyin(pinyin);\n  return Array.from(numbered).map(function (x) {\n    return /[a-z]/.test(x) ? x + x : x;\n  }).join('');\n};\n\nvar guessPhoneticAndSemanticComponents = function (glyph, components) {\n  var data = cjklib.getCharacterData(glyph.character);\n  var target = doubleAlphabeticCharacters(glyph.metadata.pinyin || data.pinyin || '');\n\n  var distance = function (component) {\n    var component_data = cjklib.getCharacterData(component);\n    var attempt = doubleAlphabeticCharacters(component_data.pinyin || '');\n    return s.levenshtein(attempt, target);\n  };\n\n  var pairs = components.map(function (x) {\n    return [x, distance(x)];\n  });\n  var sorted = pairs.sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (x) {\n    return x[0];\n  });\n  var result = {};\n\n  if (sorted.length > 0) {\n    result.phonetic = sorted[0];\n\n    if (sorted.length === 2) {\n      result.semantic = sorted[1];\n    }\n  }\n\n  return result;\n};\n\nvar AnalysisStage = /*#__PURE__*/function (_AbstractStage) {\n  _inheritsLoose(AnalysisStage, _AbstractStage);\n\n  function AnalysisStage(glyph) {\n    var _this;\n\n    _this = _AbstractStage.call(this, 'analysis') || this;\n    _this.strokes = glyph.stages.strokes.corrected;\n    var analysis = glyph.stages.analysis || {};\n    _this.tree = initializeDecompositionTree(analysis, glyph.character);\n    var components = collectComponents(_this.tree);\n    _this.radical = analysis.radical || initializeRadical(glyph.character, components);\n    _this.etymology = analysis.etymology || initializeEtymology(glyph, components);\n    _this.simplified = cjklib.getCharacterData(glyph.character).simplified;\n    stage = _assertThisInitialized(_this);\n    updateStatus();\n    return _this;\n  }\n\n  var _proto = AnalysisStage.prototype;\n\n  _proto.clearLaterStages = function () {\n    function clearLaterStages(output1, output2) {\n      return output1.decomposition !== output2.decomposition;\n    }\n\n    return clearLaterStages;\n  }();\n\n  _proto.getStageOutput = function () {\n    function getStageOutput() {\n      return {\n        decomposition: decomposition_util.convertTreeToDecomposition(this.tree),\n        etymology: _.extend({}, this.etymology),\n        radical: this.radical\n      };\n    }\n\n    return getStageOutput;\n  }();\n\n  _proto.refreshUI = function () {\n    function refreshUI() {\n      var to_path = function (x) {\n        return {\n          d: x,\n          fill: 'gray',\n          stroke: 'gray'\n        };\n      };\n\n      Session.set('stage.paths', this.strokes.map(to_path));\n      Session.set('stages.analysis.tree', this.tree);\n      Session.set('stages.analysis.radical', this.radical);\n      Session.set('stages.analysis.etymology', this.etymology);\n      Session.set('stages.analysis.simplified', this.simplified);\n    }\n\n    return refreshUI;\n  }();\n\n  return AnalysisStage;\n}(AbstractStage);\n\nTemplate.analysis_stage.events({\n  'blur .value': function (event) {\n    // This line is not needed for correctness, so we ignore any errors in it.\n    try {\n      window.getSelection().removeAllRanges();\n    } catch (e) {}\n\n    var target = $(event.target);\n    var field = target.attr('data-field');\n    var text = target.text();\n\n    if (field === 'character') {\n      updateCharacterValue(target, text, this.path);\n    } else if (field === 'radical') {\n      updateRadicalValue(target, text);\n    } else if (etymology_fields.indexOf(field) >= 0) {\n      updateEtymology(target, text, field);\n    } else {\n      assert(false, \"Unexpected editable field: \" + field);\n    }\n  },\n  'change .compound-type': function (event) {\n    var type = $(event.target).val();\n    var subtree = decomposition_util.getSubtree(stage.tree, this.path);\n\n    if (type === subtree.value || subtree.type != 'compound') {\n      return;\n    }\n\n    subtree.value = type;\n    fixSubtreeChildrenLength(subtree);\n    stage.forceRefresh();\n  },\n  'change .etymology-type': function (event) {\n    var type = $(event.target).val();\n    etymology_fields.map(function (x) {\n      if (x !== 'hint') delete stage.etymology[x];\n    });\n\n    if (type === 'pictophonetic' !== (stage.etymology.type === 'pictophonetic')) {\n      delete stage.etymology.hint;\n    }\n\n    stage.etymology.type = type;\n\n    if (type === 'pictophonetic') {\n      _.extend(stage.etymology, guessPhoneticAndSemanticComponents(Session.get('editor.glyph'), collectComponents(stage.tree)));\n    }\n\n    stage.forceRefresh();\n  },\n  'change .subtree-type': function (event) {\n    var type = $(event.target).val();\n    var subtree = decomposition_util.getSubtree(stage.tree, this.path);\n    setSubtreeType(subtree, type);\n    stage.forceRefresh();\n  }\n});\nTemplate.analysis_stage.helpers({\n  decomposition_data: function () {\n    return Session.get('stages.analysis.tree');\n  },\n  etymology_data: function () {\n    var result = Session.get('stages.analysis.etymology') || {};\n    result.hint = result.hint || '?';\n\n    if (result.type === 'pictophonetic') {\n      result.phonetic = result.phonetic || '?';\n      result.semantic = result.semantic || '?';\n    }\n\n    return result;\n  },\n  radical: function () {\n    return Session.get('stages.analysis.radical') || '?';\n  }\n});\nTemplate.tree.helpers({\n  compounds: function (value) {\n    return decomposition_util.ideograph_description_characters.map(function (x) {\n      return {\n        compound: x,\n        label: x + \" - \" + decomposition_util.ids_data[x].label,\n        value: value\n      };\n    });\n  },\n  details: function (character) {\n    var glyph = Glyphs.get(character);\n    var data = cjklib.getCharacterData(character);\n    var definition = glyph.metadata.definition || data.definition;\n    var pinyin = glyph.metadata.pinyin || data.pinyin;\n    var radical = '';\n\n    if (cjklib.radicals.radical_to_index_map.hasOwnProperty(character)) {\n      var index = cjklib.radicals.radical_to_index_map[character];\n      var primary = cjklib.radicals.primary_radical[index];\n      var variant = primary !== character;\n      radical = \"; \" + (variant ? 'variant of ' : '') + (\"Kangxi radical \" + index + \" \" + (variant ? primary : ''));\n\n      if (variant && Glyphs.get(primary)) {\n        var _glyph = Glyphs.get(primary);\n\n        var _data = cjklib.getCharacterData(primary);\n\n        definition = definition || _glyph.definition || _data.definition;\n        pinyin = pinyin || _glyph.pinyin || _data.pinyin;\n      }\n    }\n\n    definition = definition || '(unknown)';\n    return \"\" + (pinyin ? pinyin + ' - ' : '') + definition + radical;\n  }\n});\n\nvar traditionalEtymologyHack = function () {\n  // Only compute the traditional etymology based on simplified once, and only\n  // if this character does not already have an etymology computed.\n  if (!stage || !stage.simplified || stage.inferred_etymology_from_simplified_form) {\n    return;\n  }\n\n  var glyph = Session.get('editor.glyph');\n  var simplified = Glyphs.findOne({\n    character: stage.simplified\n  });\n\n  if (!glyph || !simplified) {\n    return;\n  }\n\n  stage.inferred_etymology_from_simplified_form = true;\n\n  if (glyph.stages.analysis && glyph.stages.analysis.etymology && glyph.stages.analysis.etymology.hint || !(simplified.stages.analysis && simplified.stages.analysis.etymology && simplified.stages.analysis.etymology.hint)) {\n    return;\n  } // Try to pull components for the simplified character up to components for\n  // the traditional character.\n\n\n  var mapping = {};\n  var analysis = simplified.stages.analysis;\n  var decomposition = decomposition_util.convertTreeToDecomposition(stage.tree);\n\n  if (decomposition.length === analysis.decomposition.length && decomposition[0] === analysis.decomposition[0]) {\n    for (var i = 0; i < decomposition.length; i++) {\n      mapping[analysis.decomposition[i]] = decomposition[i];\n    }\n  } else {\n    return;\n  } // Pull the actual etymology.\n\n\n  stage.etymology = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(_.keys(analysis.etymology)), _step; !(_step = _iterator()).done;) {\n    var key = _step.value;\n    var value = analysis.etymology[key];\n    stage.etymology[key] = key === 'type' ? value : value.applyMapping(mapping);\n  }\n\n  stage.forceRefresh();\n};\n\nvar updateStatus = function () {\n  var components = collectComponents(Session.get('stages.analysis.tree'));\n\n  if (Session.get('stages.analysis.simplified')) {\n    components.push(Session.get('stages.analysis.simplified'));\n  }\n\n  var radical = Session.get('stages.analysis.radical');\n  var missing = components.filter(function (x) {\n    var glyph = Glyphs.findOne({\n      character: x\n    });\n    return !glyph || !glyph.stages.verified;\n  });\n  var log = [];\n\n  if (missing.length === 0) {\n    log.push({\n      cls: 'success',\n      message: 'All components ready.'\n    });\n    Meteor.setTimeout(traditionalEtymologyHack, 0);\n  } else {\n    var error = \"Incomplete components: \" + missing.join(' ');\n    log.push({\n      cls: 'error',\n      message: error\n    });\n  }\n\n  if (!radical || radical.length === 0) {\n    log.push({\n      cls: 'error',\n      message: 'No radical selected.'\n    });\n  } else if (radical.length > 1) {\n    log.push({\n      cls: 'error',\n      message: 'Multiple radicals selected.'\n    });\n  } else if (components.indexOf(radical) >= 0) {\n    log.push({\n      cls: 'success',\n      message: \"Radical \" + radical + \" found in decomposition.\"\n    });\n  }\n\n  var nonradicals = Array.from(radical || '').filter(function (x) {\n    return !cjklib.radicals.radical_to_index_map.hasOwnProperty(x);\n  });\n\n  if (nonradicals.length > 0) {\n    log.push({\n      cls: 'error',\n      message: 'Radical field includes non-radicals: ' + nonradicals.join(' ')\n    });\n  }\n\n  if (Session.get('stage.type') === 'analysis') {\n    Session.set('stage.status', log);\n  }\n}; // We need to add the setTimeout here because client/lib is loaded before lib.\n// TODO(skishore): Find a better way to handle this load-order issue.\n\n\nMeteor.startup(function () {\n  return Meteor.setTimeout(function () {\n    Tracker.autorun(updateStatus);\n    cjklib.promise.then(function () {\n      return Tracker.autorun(function () {\n        var components = collectComponents(Session.get('stages.analysis.tree'));\n\n        if (Session.get('stages.analysis.simplified')) {\n          components.push(Session.get('stages.analysis.simplified'));\n        }\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose([].concat(components)), _step2; !(_step2 = _iterator2()).done;) {\n          var component = _step2.value;\n\n          if (cjklib.radicals.radical_to_index_map.hasOwnProperty(component)) {\n            var index = cjklib.radicals.radical_to_index_map[component];\n            var primary = cjklib.radicals.primary_radical[index];\n\n            if (primary !== component) {\n              components.push(primary);\n            }\n          }\n        }\n\n        Meteor.subscribe('getAllGlyphs', components);\n      });\n    }).catch(console.error.bind(console));\n  }, 0);\n});","map":{"version":3,"sources":["client/lib/analysis.js"],"names":["_createForOfIteratorHelperLoose","module","link","default","v","_assertThisInitialized","_inheritsLoose","export","AnalysisStage","AbstractStage","assert","cjklib","decomposition_util","Glyphs","pinyin_util","stage","undefined","etymology_fields","collectComponents","subtree","fixSubtreeChildrenLength","data","ids_data","value","children","length","arity","i","type","path","concat","setSubtreeType","ideograph_description_characters","updateCharacterValue","target","text","getSubtree","tree","forceRefresh","updateEtymology","expansion","endsWith","suffix","substr","etymology","updateRadicalValue","radical","initializeDecompositionTree","analysis","character","getCharacterData","convertDecompositionToTree","decomposition","initializeRadical","components","radicals","radical_to_index_map","hasOwnProperty","kangxi_index","index","index_to_radical_map","included","filter","x","indexOf","join","initializeEtymology","glyph","dropTones","metadata","pinyin","phonetic_match","component","component_data","attempt","phonetic","result","semantic","doubleAlphabeticCharacters","numbered","tonePinyinToNumberedPinyin","Array","from","map","test","guessPhoneticAndSemanticComponents","distance","s","levenshtein","pairs","sorted","sort","a","b","strokes","stages","corrected","simplified","updateStatus","clearLaterStages","output1","output2","getStageOutput","convertTreeToDecomposition","_","extend","refreshUI","to_path","d","fill","stroke","Session","set","Template","analysis_stage","events","event","window","getSelection","removeAllRanges","e","$","field","attr","val","hint","get","helpers","decomposition_data","etymology_data","compounds","compound","label","details","definition","primary","primary_radical","variant","traditionalEtymologyHack","inferred_etymology_from_simplified_form","findOne","mapping","keys","key","applyMapping","push","missing","verified","log","cls","message","Meteor","setTimeout","error","nonradicals","startup","Tracker","autorun","promise","then","subscribe","catch","console","bind"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\nimport {decomposition_util} from '/lib/decomposition_util';\nimport {Glyphs} from '/lib/glyphs';\nimport {pinyin_util} from '/lib/pinyin_util';\n\nlet stage = undefined;\n\nconst etymology_fields = ['hint', 'phonetic', 'semantic']\n\n// Methods for querying and modifying decomposition trees.\n\nconst collectComponents = (subtree) => {\n  return subtree ? decomposition_util.collectComponents(subtree) : [];\n}\n\nconst fixSubtreeChildrenLength = (subtree) => {\n  const data = decomposition_util.ids_data[subtree.value];\n  assert(data, `Invalid ideograph description character: ${subtree.value}`);\n  subtree.children.length = data.arity;\n  for (let i = 0; i < subtree.children.length; i++) {\n    subtree.children[i] =\n        subtree.children[i] || {type: 'character', value: '?'};\n    subtree.children[i].path = subtree.path.concat([i]);\n  }\n}\n\nconst setSubtreeType = (subtree, type) => {\n  if (subtree.type === type) {\n    return;\n  }\n  if (type === 'character') {\n    subtree.value = '?';\n    delete subtree.children;\n  } else if (type === 'compound') {\n    subtree.value = decomposition_util.ideograph_description_characters[0];\n    subtree.children = [];\n    fixSubtreeChildrenLength(subtree);\n  } else {\n    assert(false, `Unexpected subtree type: ${type}`);\n  }\n  subtree.type = type;\n}\n\n// Methods for handling updates to various non-decomposition analysis fields.\n\nconst updateCharacterValue = (target, text, path) => {\n  const subtree = decomposition_util.getSubtree(stage.tree, path);\n  if (text === subtree.value || subtree.type !== 'character') {\n    return;\n  }\n  const value = text.length === 1 ? text : '?';\n  if (value === subtree.value) {\n    target.text(value);\n  } else {\n    subtree.value = text.length === 1 ? text : '?';\n    stage.forceRefresh();\n  }\n}\n\nconst updateEtymology = (target, text, type) => {\n  let value = text && text !== '?' ? text : undefined;\n  const expansion = ' aptp';\n  if (type === 'hint' && value && value.endsWith(expansion)) {\n    const suffix = 'also provides the pronunciation'\n    value = `${value.substr(0, value.length - expansion.length)} ${suffix}`;\n  }\n  if (value === stage.etymology[type]) {\n    target.text(value || '?');\n  } else {\n    stage.etymology[type] = value;\n    stage.forceRefresh();\n  }\n}\n\nconst updateRadicalValue = (target, text) => {\n  const value = text && text !== '?' ? text : undefined;\n  if (value === stage.radical) {\n    target.text(value || '?');\n  } else {\n    stage.radical = value;\n    stage.forceRefresh();\n  }\n}\n\n// Methods for initializing different fields of the analysis.\n\nconst initializeDecompositionTree = (analysis, character) => {\n  const data = cjklib.getCharacterData(character);\n  return decomposition_util.convertDecompositionToTree(\n      analysis.decomposition || data.decomposition);\n}\n\nconst initializeRadical = (character, components) => {\n  if (cjklib.radicals.radical_to_index_map.hasOwnProperty(character)) {\n    return character;\n  }\n  const data = cjklib.getCharacterData(character);\n  if (data.kangxi_index) {\n    const index = data.kangxi_index[0];\n    const radicals = cjklib.radicals.index_to_radical_map[index];\n    const included = radicals.filter((x) => components.indexOf(x) >= 0);\n    return included.length === 1 ? included[0] : radicals.join('');\n  }\n  return undefined;\n}\n\nconst initializeEtymology = (glyph, components) => {\n  const data = cjklib.getCharacterData(glyph.character);\n  const target = pinyin_util.dropTones(\n      glyph.metadata.pinyin || data.pinyin || '');\n  const phonetic_match = (component) => {\n    const component_data = cjklib.getCharacterData(component);\n    const attempt = pinyin_util.dropTones(component_data.pinyin || '');\n    return attempt && attempt === target;\n  }\n  const phonetic = components.filter(phonetic_match);\n  if (phonetic.length === 1) {\n    const result = {type: 'pictophonetic', phonetic: phonetic[0]};\n    const semantic = components.filter((x) => !phonetic_match(x));\n    if (semantic.length === 1) {\n      result.semantic = semantic[0];\n    }\n    return result;\n  }\n  return {type: 'ideographic'};\n}\n\n// Methods for automatically inferring a phonetic-semantic decomposition.\n\nconst doubleAlphabeticCharacters = (pinyin) => {\n  const numbered = pinyin_util.tonePinyinToNumberedPinyin(pinyin);\n  return Array.from(numbered).map((x) => /[a-z]/.test(x) ? x + x : x).join('');\n}\n\nconst guessPhoneticAndSemanticComponents = (glyph, components) => {\n  const data = cjklib.getCharacterData(glyph.character);\n  const target = doubleAlphabeticCharacters(\n      glyph.metadata.pinyin || data.pinyin || '');\n  const distance = (component) => {\n    const component_data = cjklib.getCharacterData(component);\n    const attempt = doubleAlphabeticCharacters(component_data.pinyin || '');\n    return s.levenshtein(attempt, target);\n  }\n  const pairs = components.map((x) => [x, distance(x)]);\n  const sorted = pairs.sort((a, b) => a[1] - b[1]).map((x) => x[0]);\n  const result = {};\n  if (sorted.length > 0) {\n    result.phonetic = sorted[0];\n    if (sorted.length === 2) {\n      result.semantic = sorted[1];\n    }\n  }\n  return result;\n}\n\nclass AnalysisStage extends AbstractStage {\n  constructor(glyph) {\n    super('analysis');\n    this.strokes = glyph.stages.strokes.corrected;\n    const analysis = glyph.stages.analysis || {};\n    this.tree = initializeDecompositionTree(analysis, glyph.character);\n    const components = collectComponents(this.tree);\n    this.radical = analysis.radical ||\n                   initializeRadical(glyph.character, components);\n    this.etymology = analysis.etymology ||\n                     initializeEtymology(glyph, components);\n    this.simplified = cjklib.getCharacterData(glyph.character).simplified;\n    stage = this;\n    updateStatus();\n  }\n  clearLaterStages(output1, output2) {\n    return output1.decomposition !== output2.decomposition;\n  }\n  getStageOutput() {\n    return {\n      decomposition: decomposition_util.convertTreeToDecomposition(this.tree),\n      etymology: _.extend({}, this.etymology),\n      radical: this.radical,\n    }\n  }\n  refreshUI() {\n    const to_path = (x) => ({d: x, fill: 'gray', stroke: 'gray'});\n    Session.set('stage.paths', this.strokes.map(to_path));\n    Session.set('stages.analysis.tree', this.tree);\n    Session.set('stages.analysis.radical', this.radical);\n    Session.set('stages.analysis.etymology', this.etymology);\n    Session.set('stages.analysis.simplified', this.simplified);\n  }\n}\n\nTemplate.analysis_stage.events({\n  'blur .value': function(event) {\n    // This line is not needed for correctness, so we ignore any errors in it.\n    try { window.getSelection().removeAllRanges(); } catch (e) { }\n    const target = $(event.target);\n    const field = target.attr('data-field');\n    const text = target.text();\n    if (field === 'character') {\n      updateCharacterValue(target, text, this.path);\n    } else if (field === 'radical') {\n      updateRadicalValue(target, text);\n    } else if (etymology_fields.indexOf(field) >= 0) {\n      updateEtymology(target, text, field);\n    } else {\n      assert(false, `Unexpected editable field: ${field}`);\n    }\n  },\n  'change .compound-type': function(event) {\n    const type = $(event.target).val();\n    const subtree = decomposition_util.getSubtree(stage.tree, this.path);\n    if (type === subtree.value || subtree.type != 'compound') {\n      return;\n    }\n    subtree.value = type;\n    fixSubtreeChildrenLength(subtree);\n    stage.forceRefresh();\n  },\n  'change .etymology-type': function(event) {\n    const type = $(event.target).val();\n    etymology_fields.map(\n        (x) => { if (x !== 'hint') delete stage.etymology[x]; });\n    if ((type === 'pictophonetic') !==\n        (stage.etymology.type === 'pictophonetic')) {\n      delete stage.etymology.hint;\n    }\n    stage.etymology.type = type;\n    if (type === 'pictophonetic') {\n      _.extend(stage.etymology, guessPhoneticAndSemanticComponents(\n          Session.get('editor.glyph'), collectComponents(stage.tree)));\n    }\n    stage.forceRefresh();\n  },\n  'change .subtree-type': function(event) {\n    const type = $(event.target).val();\n    const subtree = decomposition_util.getSubtree(stage.tree, this.path);\n    setSubtreeType(subtree, type);\n    stage.forceRefresh();\n  },\n});\n\nTemplate.analysis_stage.helpers({\n  decomposition_data: () => {\n    return Session.get('stages.analysis.tree');\n  },\n  etymology_data: () => {\n    const result = Session.get('stages.analysis.etymology') || {};\n    result.hint = result.hint || '?';\n    if (result.type === 'pictophonetic') {\n      result.phonetic = result.phonetic || '?';\n      result.semantic = result.semantic || '?';\n    }\n    return result;\n  },\n  radical: () => {\n    return Session.get('stages.analysis.radical') || '?';\n  },\n});\n\nTemplate.tree.helpers({\n  compounds: (value) => {\n    return decomposition_util.ideograph_description_characters.map( (x) => ({\n      compound: x,\n      label: `${x} - ${decomposition_util.ids_data[x].label}`,\n      value: value,\n    }));\n  },\n  details: (character) => {\n    const glyph = Glyphs.get(character);\n    const data = cjklib.getCharacterData(character);\n    let definition = glyph.metadata.definition || data.definition;\n    let pinyin = glyph.metadata.pinyin || data.pinyin;\n    let radical = '';\n    if (cjklib.radicals.radical_to_index_map.hasOwnProperty(character)) {\n      const index = cjklib.radicals.radical_to_index_map[character];\n      const primary = cjklib.radicals.primary_radical[index];\n      const variant = primary !== character;\n      radical = `; ${variant ? 'variant of ' : ''}` +\n                `Kangxi radical ${index} ${variant ? primary : ''}`;\n      if (variant && Glyphs.get(primary)) {\n        const glyph = Glyphs.get(primary);\n        const data = cjklib.getCharacterData(primary);\n        definition = definition || glyph.definition || data.definition;\n        pinyin = pinyin || glyph.pinyin || data.pinyin;\n      }\n    }\n    definition = definition || '(unknown)';\n    return `${pinyin ? pinyin + ' - ' : ''}${definition}${radical}`;\n  },\n});\n\nconst traditionalEtymologyHack = () => {\n  // Only compute the traditional etymology based on simplified once, and only\n  // if this character does not already have an etymology computed.\n  if (!stage || !stage.simplified ||\n      stage.inferred_etymology_from_simplified_form) {\n    return;\n  }\n  const glyph = Session.get('editor.glyph');\n  const simplified = Glyphs.findOne({character: stage.simplified});\n  if (!glyph || !simplified) {\n    return;\n  }\n  stage.inferred_etymology_from_simplified_form = true;\n  if ((glyph.stages.analysis && glyph.stages.analysis.etymology &&\n       glyph.stages.analysis.etymology.hint) ||\n      !(simplified.stages.analysis && simplified.stages.analysis.etymology &&\n        simplified.stages.analysis.etymology.hint)) {\n    return;\n  }\n  // Try to pull components for the simplified character up to components for\n  // the traditional character.\n  const mapping = {};\n  const analysis = simplified.stages.analysis;\n  const decomposition =\n      decomposition_util.convertTreeToDecomposition(stage.tree);\n  if (decomposition.length === analysis.decomposition.length &&\n      decomposition[0] === analysis.decomposition[0]) {\n    for (let i = 0; i < decomposition.length; i++) {\n      mapping[analysis.decomposition[i]] = decomposition[i];\n    }\n  } else {\n    return;\n  }\n  // Pull the actual etymology.\n  stage.etymology = {};\n  for (let key of _.keys(analysis.etymology)) {\n    const value = analysis.etymology[key];\n    stage.etymology[key] = key === 'type' ? value : value.applyMapping(mapping);\n  }\n  stage.forceRefresh();\n}\n\nconst updateStatus = () => {\n  const components = collectComponents(Session.get('stages.analysis.tree'));\n  if (Session.get('stages.analysis.simplified')) {\n    components.push(Session.get('stages.analysis.simplified'));\n  }\n  const radical = Session.get('stages.analysis.radical');\n  const missing = components.filter((x) => {\n    const glyph = Glyphs.findOne({character: x});\n    return !glyph || !glyph.stages.verified;\n  });\n  const log = [];\n  if (missing.length === 0) {\n    log.push({cls: 'success', message: 'All components ready.'});\n    Meteor.setTimeout(traditionalEtymologyHack, 0);\n  } else {\n    const error = `Incomplete components: ${missing.join(' ')}`;\n    log.push({cls: 'error', message: error});\n  }\n  if (!radical || radical.length === 0) {\n    log.push({cls: 'error', message: 'No radical selected.'});\n  } else if (radical.length > 1) {\n    log.push({cls: 'error', message: 'Multiple radicals selected.'});\n  } else if (components.indexOf(radical) >= 0) {\n    log.push({cls: 'success',\n              message: `Radical ${radical} found in decomposition.`});\n  }\n  const nonradicals = (Array.from(radical || '')).filter(\n      (x) => !cjklib.radicals.radical_to_index_map.hasOwnProperty(x));\n  if (nonradicals.length > 0) {\n    log.push({cls: 'error', message: 'Radical field includes non-radicals: ' +\n                                     nonradicals.join(' ')});\n  }\n  if (Session.get('stage.type') === 'analysis') {\n    Session.set('stage.status', log);\n  }\n}\n\n// We need to add the setTimeout here because client/lib is loaded before lib.\n// TODO(skishore): Find a better way to handle this load-order issue.\nMeteor.startup(() => Meteor.setTimeout(() => {\n  Tracker.autorun(updateStatus);\n  cjklib.promise.then(() => Tracker.autorun(() => {\n    const components = collectComponents(Session.get('stages.analysis.tree'));\n    if (Session.get('stages.analysis.simplified')) {\n      components.push(Session.get('stages.analysis.simplified'));\n    }\n    for (let component of [].concat(components)) {\n      if (cjklib.radicals.radical_to_index_map.hasOwnProperty(component)) {\n        const index = cjklib.radicals.radical_to_index_map[component];\n        const primary = cjklib.radicals.primary_radical[index]\n        if (primary !== component) {\n          components.push(primary);\n        }\n      }\n    }\n    Meteor.subscribe('getAllGlyphs', components);\n  })).catch(console.error.bind(console));\n}, 0));\n\nexport {AnalysisStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"a12756ad22c20b2b6d2c9b7f8e14d19cf2f66601"}
