{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/path.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/path.js"}},"code":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  PathStage: function () {\n    return PathStage;\n  }\n});\nvar opentype;\nmodule.link(\"/client/external/opentype/0.4.10/opentype\", {\n  \"default\": function (v) {\n    opentype = v;\n  }\n}, 0);\nvar AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage: function (v) {\n    AbstractStage = v;\n  }\n}, 1);\nvar assert, Point;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  },\n  Point: function (v) {\n    Point = v;\n  }\n}, 2);\nvar Glyphs;\nmodule.link(\"/lib/glyphs\", {\n  Glyphs: function (v) {\n    Glyphs = v;\n  }\n}, 3);\nvar svg;\nmodule.link(\"/lib/svg\", {\n  svg: function (v) {\n    svg = v;\n  }\n}, 4);\nvar stage = undefined;\n\nvar PathStage = /*#__PURE__*/function (_AbstractStage) {\n  _inheritsLoose(PathStage, _AbstractStage);\n\n  function PathStage(glyph) {\n    var _this;\n\n    _this = _AbstractStage.call(this, 'path') || this;\n    _this.adjusted = glyph.stages.path;\n    _this.character = glyph.character;\n    _this.alternative = undefined;\n    _this.error = 'No path data.';\n    stage = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  var _proto = PathStage.prototype;\n\n  _proto.onGetPath = function () {\n    function onGetPath(error, path) {\n      Session.set('modal.value', undefined);\n      this.adjusted = path;\n      this.error = error;\n      this.forceRefresh();\n    }\n\n    return onGetPath;\n  }();\n\n  _proto.refreshUI = function () {\n    function refreshUI() {\n      var d = this.adjusted;\n      Session.set('stage.paths', [{\n        d: d,\n        fill: 'gray',\n        stroke: 'gray'\n      }]);\n      Session.set('stage.status', d ? [{\n        cls: 'success',\n        message: 'Got path data.'\n      }] : [{\n        cls: 'error',\n        message: this.error\n      }]);\n      Session.set('stages.path.alternative', this.alternative);\n    }\n\n    return refreshUI;\n  }();\n\n  return PathStage;\n}(AbstractStage); // We avoid arrow functions in this map so that this is bound to the template.\n\n\nTemplate.path_stage.events({\n  'blur .value': function (event) {\n    var text = $(event.target).text();\n    var value = text.length === 1 && text !== '?' ? text : undefined;\n\n    if (value === stage.alternative) {\n      $(event.target).text(value || '?');\n    } else {\n      stage.alternative = value;\n      stage.forceRefresh();\n    }\n  },\n  'click .option': function (event) {\n    var label = this.label;\n    var character = stage.character;\n    assert(character.length === 1);\n    Session.set('modal.text', \"Loading \" + label + \"...\");\n    Session.set('modal.value', 0);\n    opentype.load(this.font, function (error, font) {\n      stage.alternative = undefined;\n\n      if (error) {\n        stage.onGetPath(\"Error loading \" + label + \": \" + error);\n        return;\n      }\n\n      Session.set('modal.text', \"Extracting \" + character + \" from \" + label + \"...\");\n      Session.set('modal.value', 0.5);\n      var index = font.charToGlyphIndex(character);\n      var glyph = font.glyphs.get(index);\n\n      if (glyph.unicode !== character.codePointAt(0)) {\n        stage.onGetPath(character + \" is not present in \" + label + \".\");\n        return;\n      } // TODO(skishore): We may want a try/catch around this call.\n\n\n      var path = svg.convertCommandsToPath(glyph.path.commands);\n      stage.onGetPath(undefined, path);\n    });\n  }\n});\nTemplate.path_stage.helpers({\n  alternative: function () {\n    return Session.get('stages.path.alternative') || '?';\n  },\n  options: function () {\n    return [{\n      font: 'arphic/gkai00mp.ttf',\n      label: 'AR PL KaitiM GB'\n    }, {\n      font: 'arphic/UKaiCN.ttf',\n      label: 'AR PL UKai'\n    }];\n  }\n});\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    var alternative = Session.get('stages.path.alternative');\n\n    if (alternative) {\n      Meteor.subscribe('getAllGlyphs', [alternative]);\n      var glyph = Glyphs.findOne({\n        character: alternative\n      });\n\n      if (!glyph) {\n        stage.onGetPath(\"Could not find glyph for \" + alternative + \".\");\n      } else if (!glyph.stages.path) {\n        stage.onGetPath(\"No available path for \" + alternative + \".\");\n      } else {\n        stage.onGetPath(undefined, glyph.stages.path);\n      }\n    }\n  });\n});","map":{"version":3,"sources":["client/lib/path.js"],"names":["_assertThisInitialized","module","link","default","v","_inheritsLoose","export","PathStage","opentype","AbstractStage","assert","Point","Glyphs","svg","stage","undefined","glyph","adjusted","stages","path","character","alternative","error","onGetPath","Session","set","forceRefresh","refreshUI","d","fill","stroke","cls","message","Template","path_stage","events","event","text","$","target","value","length","label","load","font","index","charToGlyphIndex","glyphs","get","unicode","codePointAt","convertCommandsToPath","commands","helpers","options","Meteor","startup","Tracker","autorun","subscribe","findOne"],"mappings":"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","sourcesContent":["import opentype from '/client/external/opentype/0.4.10/opentype';\n\nimport {AbstractStage} from '/client/lib/abstract';\nimport {assert, Point} from '/lib/base';\nimport {Glyphs} from '/lib/glyphs';\nimport {svg} from '/lib/svg';\n\nlet stage = undefined;\n\nclass PathStage extends AbstractStage {\n  constructor(glyph) {\n    super('path');\n    this.adjusted = glyph.stages.path;\n    this.character = glyph.character;\n    this.alternative = undefined;\n    this.error = 'No path data.';\n    stage = this;\n  }\n  onGetPath(error, path) {\n    Session.set('modal.value', undefined);\n    this.adjusted = path;\n    this.error = error;\n    this.forceRefresh();\n  }\n  refreshUI() {\n    const d = this.adjusted;\n    Session.set('stage.paths', [{d: d, fill: 'gray', stroke: 'gray'}]);\n    Session.set(\n      'stage.status',\n      d ? [{cls: 'success', message: 'Got path data.'}]\n        : [{cls: 'error', message: this.error}]);\n    Session.set('stages.path.alternative', this.alternative);\n  }\n}\n\n// We avoid arrow functions in this map so that this is bound to the template.\nTemplate.path_stage.events({\n  'blur .value': function(event) {\n    const text = $(event.target).text();\n    const value = text.length === 1 && text !== '?' ? text : undefined;\n    if (value === stage.alternative) {\n      $(event.target).text(value || '?');\n    } else {\n      stage.alternative = value;\n      stage.forceRefresh();\n    }\n  },\n  'click .option': function(event) {\n    const label = this.label;\n    const character = stage.character;\n    assert(character.length === 1);\n    Session.set('modal.text', `Loading ${label}...`);\n    Session.set('modal.value', 0);\n    opentype.load(this.font, (error, font) => {\n      stage.alternative = undefined;\n      if (error) {\n        stage.onGetPath(`Error loading ${label}: ${error}`);\n        return;\n      }\n      Session.set('modal.text', `Extracting ${character} from ${label}...`);\n      Session.set('modal.value', 0.5);\n      const index = font.charToGlyphIndex(character);\n      const glyph = font.glyphs.get(index);\n      if (glyph.unicode !== character.codePointAt(0)) {\n        stage.onGetPath(`${character} is not present in ${label}.`);\n        return;\n      }\n      // TODO(skishore): We may want a try/catch around this call.\n      const path = svg.convertCommandsToPath(glyph.path.commands);\n      stage.onGetPath(undefined, path);\n    });\n  },\n});\n\nTemplate.path_stage.helpers({\n  alternative: () => Session.get('stages.path.alternative') || '?',\n  options: () => [{font: 'arphic/gkai00mp.ttf', label: 'AR PL KaitiM GB'},\n                  {font: 'arphic/UKaiCN.ttf', label: 'AR PL UKai'}],\n});\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const alternative = Session.get('stages.path.alternative');\n    if (alternative) {\n      Meteor.subscribe('getAllGlyphs', [alternative]);\n      const glyph = Glyphs.findOne({character: alternative});\n      if (!glyph) {\n        stage.onGetPath(`Could not find glyph for ${alternative}.`);\n      } else if (!glyph.stages.path) {\n        stage.onGetPath(`No available path for ${alternative}.`);\n      } else {\n        stage.onGetPath(undefined, glyph.stages.path);\n      }\n    }\n  });\n});\n\nexport {PathStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"316a68da976b37c4cee93753b183480c5e7669b8"}
