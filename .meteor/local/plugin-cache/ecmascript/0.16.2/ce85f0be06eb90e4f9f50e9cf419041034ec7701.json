{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/strokes.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/strokes.js"}},"code":"var _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  StrokesStage: function () {\n    return StrokesStage;\n  }\n});\nvar AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage: function (v) {\n    AbstractStage = v;\n  }\n}, 0);\nvar assert;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  }\n}, 1);\nvar cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib: function (v) {\n    cjklib = v;\n  }\n}, 2);\nvar fixStrokes;\nmodule.link(\"/lib/stroke_caps/fixStrokes\", {\n  fixStrokes: function (v) {\n    fixStrokes = v;\n  }\n}, 3);\nvar stroke_extractor;\nmodule.link(\"/lib/stroke_extractor\", {\n  stroke_extractor: function (v) {\n    stroke_extractor = v;\n  }\n}, 4);\n\nvar getStatusLine = function (actual, expected) {\n  var actual_text = \"Selected \" + actual + \" stroke\" + (actual === 1 ? '' : 's');\n\n  if (!expected) {\n    return {\n      cls: 'error',\n      message: actual_text + \". True number unknown.\"\n    };\n  } else if (actual !== expected) {\n    return {\n      cls: 'error',\n      message: actual_text + \", but need \" + expected + \".\"\n    };\n  }\n\n  return {\n    cls: 'success',\n    message: actual_text + \".\"\n  };\n};\n\nvar getStrokePaths = function (strokes, include, colors) {\n  var result = [];\n\n  for (var i = 0; i < strokes.length; i++) {\n    var stroke = strokes[i];\n    var color = include[stroke] ? colors[i % colors.length] : 'gray';\n    result.push({\n      cls: 'selectable',\n      d: stroke,\n      fill: color,\n      stroke: 'black'\n    });\n  }\n\n  return result;\n};\n\nvar StrokesStage = /*#__PURE__*/function (_AbstractStage) {\n  _inheritsLoose(StrokesStage, _AbstractStage);\n\n  function StrokesStage(glyph) {\n    var _this;\n\n    _this = _AbstractStage.call(this, 'strokes') || this;\n    var raw = stroke_extractor.getStrokes(glyph.stages.path, glyph.stages.bridges).strokes;\n    _this.include = {};\n    _this.original = {\n      corrected: fixStrokes(raw),\n      raw: raw\n    };\n\n    _this.original.corrected.map(function (x) {\n      return _this.include[x] = true;\n    });\n\n    if (glyph.stages.strokes) {\n      _this.original.corrected.map(function (x) {\n        return _this.include[x] = false;\n      });\n\n      glyph.stages.strokes.corrected.map(function (x) {\n        return _this.include[x] = true;\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = StrokesStage.prototype;\n\n  _proto.getStageOutput = function () {\n    function getStageOutput() {\n      var _this2 = this;\n\n      var fn = function (_, i) {\n        return _this2.include[_this2.original.corrected[i]];\n      };\n\n      return {\n        raw: this.original.raw.filter(fn),\n        corrected: this.original.corrected.filter(fn)\n      };\n    }\n\n    return getStageOutput;\n  }();\n\n  _proto.handleEvent = function () {\n    function handleEvent(event, template) {\n      assert(this.include.hasOwnProperty(template.d));\n      this.include[template.d] = !this.include[template.d];\n    }\n\n    return handleEvent;\n  }();\n\n  _proto.refreshUI = function () {\n    function refreshUI(character, metadata) {\n      var strokes = this.original.corrected;\n      Session.set('stage.paths', getStrokePaths(strokes, this.include, this.colors));\n      var data = cjklib.getCharacterData(character);\n      var actual = this.getStageOutput().corrected.length;\n      var expected = metadata.strokes || data.strokes;\n      Session.set('stage.status', [getStatusLine(actual, expected)]);\n    }\n\n    return refreshUI;\n  }();\n\n  return StrokesStage;\n}(AbstractStage);","map":{"version":3,"sources":["client/lib/strokes.js"],"names":["_inheritsLoose","module","link","default","v","export","StrokesStage","AbstractStage","assert","cjklib","fixStrokes","stroke_extractor","getStatusLine","actual","expected","actual_text","cls","message","getStrokePaths","strokes","include","colors","result","i","length","stroke","color","push","d","fill","glyph","raw","getStrokes","stages","path","bridges","original","corrected","map","x","getStageOutput","fn","_","filter","handleEvent","event","template","hasOwnProperty","refreshUI","character","metadata","Session","set","data","getCharacterData"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\nimport {fixStrokes} from '/lib/stroke_caps/fixStrokes';\nimport {stroke_extractor} from '/lib/stroke_extractor';\n\nconst getStatusLine = (actual, expected) => {\n  const actual_text = `Selected ${actual} stroke${actual === 1 ? '' : 's'}`;\n  if (!expected) {\n    return {cls: 'error', message: `${actual_text}. True number unknown.`};\n  } else if (actual !== expected) {\n    return {cls: 'error', message: `${actual_text}, but need ${expected}.`};\n  }\n  return {cls: 'success', message: `${actual_text}.`};\n}\n\nconst getStrokePaths = (strokes, include, colors) => {\n  const result = [];\n  for (let i = 0; i < strokes.length; i++) {\n    const stroke = strokes[i];\n    const color = include[stroke] ? colors[i % colors.length] : 'gray';\n    result.push({cls: 'selectable', d: stroke, fill: color, stroke: 'black'});\n  }\n  return result;\n}\n\nclass StrokesStage extends AbstractStage {\n  constructor(glyph) {\n    super('strokes');\n    const raw = stroke_extractor.getStrokes(\n        glyph.stages.path, glyph.stages.bridges).strokes;\n    this.include = {};\n    this.original = {corrected: fixStrokes(raw), raw};\n    this.original.corrected.map((x) => this.include[x] = true);\n    if (glyph.stages.strokes) {\n      this.original.corrected.map((x) => this.include[x] = false);\n      glyph.stages.strokes.corrected.map((x) => this.include[x] = true);\n    }\n  }\n  getStageOutput() {\n    const fn = (_, i) => this.include[this.original.corrected[i]];\n    return {\n      raw: this.original.raw.filter(fn),\n      corrected: this.original.corrected.filter(fn),\n    };\n  }\n  handleEvent(event, template) {\n    assert(this.include.hasOwnProperty(template.d));\n    this.include[template.d] = !this.include[template.d];\n  }\n  refreshUI(character, metadata) {\n    const strokes = this.original.corrected;\n    Session.set('stage.paths',\n                getStrokePaths(strokes, this.include, this.colors));\n    const data = cjklib.getCharacterData(character);\n    const actual = this.getStageOutput().corrected.length;\n    const expected = metadata.strokes || data.strokes;\n    Session.set('stage.status', [getStatusLine(actual, expected)]);\n  }\n}\n\nexport {StrokesStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"ce85f0be06eb90e4f9f50e9cf419041034ec7701"}
