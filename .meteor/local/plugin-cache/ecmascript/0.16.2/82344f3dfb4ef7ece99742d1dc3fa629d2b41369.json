{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/editor.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/editor.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/editor.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/editor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/editor.js"}},"code":"var AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage: function (v) {\n    AbstractStage = v;\n  }\n}, 0);\nvar AnalysisStage;\nmodule.link(\"/client/lib/analysis\", {\n  AnalysisStage: function (v) {\n    AnalysisStage = v;\n  }\n}, 1);\nvar BridgesStage;\nmodule.link(\"/client/lib/bridges\", {\n  BridgesStage: function (v) {\n    BridgesStage = v;\n  }\n}, 2);\nvar OrderStage;\nmodule.link(\"/client/lib/order\", {\n  OrderStage: function (v) {\n    OrderStage = v;\n  }\n}, 3);\nvar PathStage;\nmodule.link(\"/client/lib/path\", {\n  PathStage: function (v) {\n    PathStage = v;\n  }\n}, 4);\nvar StrokesStage;\nmodule.link(\"/client/lib/strokes\", {\n  StrokesStage: function (v) {\n    StrokesStage = v;\n  }\n}, 5);\nvar VerifiedStage;\nmodule.link(\"/client/lib/verified\", {\n  VerifiedStage: function (v) {\n    VerifiedStage = v;\n  }\n}, 6);\nvar assert;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  }\n}, 7);\nvar cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib: function (v) {\n    cjklib = v;\n  }\n}, 8);\nSession.set('editor.glyph', undefined);\nvar stages = {\n  analysis: AnalysisStage,\n  bridges: BridgesStage,\n  order: OrderStage,\n  path: PathStage,\n  strokes: StrokesStage,\n  verified: VerifiedStage\n};\nvar types = ['path', 'bridges', 'strokes', 'analysis', 'order', 'verified'];\nvar last_glyph = undefined;\nvar last_json = undefined;\nvar stage = new AbstractStage();\n\nvar changeGlyph = function (method, argument) {\n  argument = argument || Session.get('editor.glyph');\n  Meteor.call(method, argument, function (error, data) {\n    assert(!error, error);\n    Session.set('editor.glyph', data);\n    window.location.hash = encodeURIComponent(data.character);\n  });\n};\n\nvar clearStageSessionKeys = function (type) {\n  Object.keys(Session.keys).filter(function (x) {\n    return x.startsWith(\"stages.\" + type + \".\");\n  }).map(function (x) {\n    return Session.set(x, undefined);\n  });\n};\n\nvar constructStage = function (type) {\n  var glyph = Session.get('editor.glyph');\n  var current = glyph.stages[type];\n\n  if (!current || current.sentinel) {\n    glyph.stages[type] = null;\n  }\n\n  clearStageSessionKeys(stage.type);\n  stage = new stages[type](glyph);\n  assert(stage.type === type);\n  stage.forceRefresh = forceRefresh;\n  stage.forceRefresh(true\n  /* from_construct_stage */\n  );\n};\n\nvar forceRefresh = function (from_construct_stage) {\n  var glyph = Session.get('editor.glyph');\n  stage.refreshUI(glyph.character, glyph.metadata);\n  var output = stage.getStageOutput();\n  var current = glyph.stages[stage.type];\n\n  if (from_construct_stage && (!current || current.sentinel)) {\n    output = {\n      sentinel: true\n    };\n  }\n\n  if (!_.isEqual(output, current)) {\n    glyph.stages[stage.type] = output;\n\n    if (!output || !current || stage.clearLaterStages(output, current)) {\n      for (var i = types.indexOf(stage.type) + 1; i < types.length; i++) {\n        glyph.stages[types[i]] = null;\n      }\n    }\n\n    Session.set('editor.glyph', glyph);\n  }\n};\n\nvar incrementStage = function (amount) {\n  var index = types.indexOf(stage.type);\n  if (index < 0) return;\n  var new_index = index + amount;\n  if (new_index < 0 || new_index >= types.length) return;\n\n  if (amount > 0) {\n    try {\n      stage.validate();\n    } catch (e) {\n      // HACK(skishore): The analysis stage may be failing because some\n      // dependency of the current glyph is incomplete. Switch to it. This code\n      // is a terrible hack because it makes use of the string used to render\n      // the incomplete-component message.\n      var log = Session.get('stage.status');\n      var prefix = 'Incomplete components: ';\n\n      if (log.length > 0 && log[0].message.startsWith(prefix)) {\n        changeGlyph('getGlyph', log[0].message[prefix.length]);\n      }\n\n      return;\n    }\n\n    stage.forceRefresh();\n  }\n\n  constructStage(types[new_index]);\n};\n\nvar loadCharacter = function () {\n  var character = decodeURIComponent(window.location.hash.slice(1));\n  var glyph = Session.get('editor.glyph');\n\n  if (!character) {\n    changeGlyph('getNextGlyph');\n  } else if (!glyph || glyph.character !== character) {\n    changeGlyph('getGlyph', character);\n  }\n};\n\nvar resetStage = function () {\n  var glyph = Session.get('editor.glyph');\n  glyph.stages[stage.type] = null;\n  Session.set('editor.glyph', glyph);\n  constructStage(stage.type);\n};\n\nvar bindings = {\n  a: function () {\n    return changeGlyph('getPreviousGlyph');\n  },\n  A: function () {\n    return changeGlyph('getPreviousUnverifiedGlyph');\n  },\n  q: function () {\n    return changeGlyph('getPreviousVerifiedGlyph');\n  },\n  d: function () {\n    return changeGlyph('getNextGlyph');\n  },\n  D: function () {\n    return changeGlyph('getNextUnverifiedGlyph');\n  },\n  e: function () {\n    return changeGlyph('getNextVerifiedGlyph');\n  },\n  r: resetStage,\n  s: function () {\n    return incrementStage(1);\n  },\n  w: function () {\n    return incrementStage(-1);\n  }\n}; // We avoid arrow functions in this map so that this is bound to the template.\n\nTemplate.editor.events({\n  'click svg .selectable': function (event) {\n    stage.handleEvent(event, this);\n    stage.forceRefresh();\n  }\n});\nTemplate.editor.helpers({\n  paths: function () {\n    return Session.get('stage.paths');\n  },\n  lines: function () {\n    return Session.get('stage.lines');\n  },\n  points: function () {\n    return Session.get('stage.points');\n  },\n  animations: function () {\n    return Session.get('stage.animations');\n  }\n});\nTemplate.status.helpers({\n  stage: function () {\n    return Session.get('stage.type');\n  },\n  template: function () {\n    return Session.get('stage.type') + \"_stage\";\n  },\n  lines: function () {\n    return Session.get('stage.status');\n  }\n});\nTracker.autorun(function () {\n  var glyph = Session.get('editor.glyph');\n  var json = JSON.stringify(glyph);\n\n  if (!glyph || json === last_json) {\n    return;\n  } else if (!last_glyph || glyph.character !== last_glyph.character) {\n    var last_completed_stage = types[0];\n    types.map(function (x) {\n      if (glyph.stages[x]) last_completed_stage = x;\n    });\n    constructStage(last_completed_stage);\n  } else {\n    Meteor.call('saveGlyph', glyph, function (error, data) {\n      if (error) console.error(error);\n    });\n\n    if (!_.isEqual(glyph.metadata, last_glyph.metadata)) {\n      stage.refreshUI(glyph.character, glyph.metadata);\n    }\n  }\n\n  last_glyph = glyph;\n  last_json = json;\n});\nMeteor.startup(function () {\n  $('body').on('keypress', function (event) {\n    var key = String.fromCharCode(event.which);\n\n    if (bindings.hasOwnProperty(key)) {\n      bindings[key]();\n    } else if ('1' <= key && key <= '9') {\n      var index = key.charCodeAt(0) - '1'.charCodeAt(0);\n      var href = $('.metadata .reference')[index].href;\n      window.open(href, '_blank').focus();\n    }\n  });\n  $(window).on('hashchange', loadCharacter);\n  cjklib.promise.then(loadCharacter).catch(console.error.bind(console));\n});","map":{"version":3,"sources":["client/editor.js"],"names":["AbstractStage","module","link","v","AnalysisStage","BridgesStage","OrderStage","PathStage","StrokesStage","VerifiedStage","assert","cjklib","Session","set","undefined","stages","analysis","bridges","order","path","strokes","verified","types","last_glyph","last_json","stage","changeGlyph","method","argument","get","Meteor","call","error","data","window","location","hash","encodeURIComponent","character","clearStageSessionKeys","type","Object","keys","filter","x","startsWith","map","constructStage","glyph","current","sentinel","forceRefresh","from_construct_stage","refreshUI","metadata","output","getStageOutput","_","isEqual","clearLaterStages","i","indexOf","length","incrementStage","amount","index","new_index","validate","e","log","prefix","message","loadCharacter","decodeURIComponent","slice","resetStage","bindings","a","A","q","d","D","r","s","w","Template","editor","events","event","handleEvent","helpers","paths","lines","points","animations","status","template","Tracker","autorun","json","JSON","stringify","last_completed_stage","console","startup","$","on","key","String","fromCharCode","which","hasOwnProperty","charCodeAt","href","open","focus","promise","then","catch","bind"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {AnalysisStage} from '/client/lib/analysis';\nimport {BridgesStage} from '/client/lib/bridges';\nimport {OrderStage} from '/client/lib/order';\nimport {PathStage} from '/client/lib/path';\nimport {StrokesStage} from '/client/lib/strokes';\nimport {VerifiedStage} from '/client/lib/verified';\nimport {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\n\nSession.set('editor.glyph', undefined);\n\nconst stages = {\n  analysis: AnalysisStage,\n  bridges: BridgesStage,\n  order: OrderStage,\n  path: PathStage,\n  strokes: StrokesStage,\n  verified: VerifiedStage,\n};\nconst types = ['path', 'bridges', 'strokes', 'analysis', 'order', 'verified'];\nlet last_glyph = undefined;\nlet last_json = undefined;\nlet stage = new AbstractStage;\n\nconst changeGlyph = (method, argument) => {\n  argument = argument || Session.get('editor.glyph');\n  Meteor.call(method, argument, function(error, data) {\n    assert(!error, error);\n    Session.set('editor.glyph', data);\n    window.location.hash = encodeURIComponent(data.character);\n  });\n}\n\nconst clearStageSessionKeys = (type) => {\n  Object.keys(Session.keys).filter((x) => x.startsWith(`stages.${type}.`))\n                           .map((x) => Session.set(x, undefined));\n}\n\nconst constructStage = (type) => {\n  const glyph = Session.get('editor.glyph');\n  const current = glyph.stages[type];\n  if (!current || current.sentinel) {\n    glyph.stages[type] = null;\n  }\n  clearStageSessionKeys(stage.type);\n  stage = new stages[type](glyph);\n  assert(stage.type === type);\n  stage.forceRefresh = forceRefresh;\n  stage.forceRefresh(true /* from_construct_stage */);\n}\n\nconst forceRefresh = (from_construct_stage) => {\n  const glyph = Session.get('editor.glyph');\n  stage.refreshUI(glyph.character, glyph.metadata);\n  let output = stage.getStageOutput();\n  const current = glyph.stages[stage.type];\n  if (from_construct_stage && (!current || current.sentinel)) {\n    output = {sentinel: true};\n  }\n  if (!_.isEqual(output, current)) {\n    glyph.stages[stage.type] = output;\n    if (!output || !current || stage.clearLaterStages(output, current)) {\n      for (let i = types.indexOf(stage.type) + 1; i < types.length; i++) {\n        glyph.stages[types[i]] = null;\n      }\n    }\n    Session.set('editor.glyph', glyph);\n  }\n}\n\nconst incrementStage = (amount) => {\n  const index = types.indexOf(stage.type);\n  if (index < 0) return;\n  const new_index = index + amount;\n  if (new_index < 0 || new_index >= types.length) return;\n  if (amount > 0) {\n    try {\n      stage.validate();\n    } catch (e) {\n      // HACK(skishore): The analysis stage may be failing because some\n      // dependency of the current glyph is incomplete. Switch to it. This code\n      // is a terrible hack because it makes use of the string used to render\n      // the incomplete-component message.\n      const log = Session.get('stage.status');\n      const prefix = 'Incomplete components: ';\n      if (log.length > 0 && log[0].message.startsWith(prefix)) {\n        changeGlyph('getGlyph', log[0].message[prefix.length]);\n      }\n      return;\n    }\n    stage.forceRefresh();\n  }\n  constructStage(types[new_index]);\n}\n\nconst loadCharacter = () => {\n  const character = decodeURIComponent(window.location.hash.slice(1));\n  const glyph = Session.get('editor.glyph');\n  if (!character) {\n    changeGlyph('getNextGlyph');\n  } else if (!glyph || glyph.character !== character) {\n    changeGlyph('getGlyph', character);\n  }\n}\n\nconst resetStage = () => {\n  const glyph = Session.get('editor.glyph');\n  glyph.stages[stage.type] = null;\n  Session.set('editor.glyph', glyph);\n  constructStage(stage.type);\n}\n\nconst bindings = {\n  a: () => changeGlyph('getPreviousGlyph'),\n  A: () => changeGlyph('getPreviousUnverifiedGlyph'),\n  q: () => changeGlyph('getPreviousVerifiedGlyph'),\n  d: () => changeGlyph('getNextGlyph'),\n  D: () => changeGlyph('getNextUnverifiedGlyph'),\n  e: () => changeGlyph('getNextVerifiedGlyph'),\n  r: resetStage,\n  s: () => incrementStage(1),\n  w: () => incrementStage(-1),\n};\n\n// We avoid arrow functions in this map so that this is bound to the template.\nTemplate.editor.events({\n  'click svg .selectable': function(event) {\n    stage.handleEvent(event, this);\n    stage.forceRefresh();\n  }\n});\n\nTemplate.editor.helpers({\n  paths: () => Session.get('stage.paths'),\n  lines: () => Session.get('stage.lines'),\n  points: () => Session.get('stage.points'),\n  animations: () => Session.get('stage.animations'),\n});\n\nTemplate.status.helpers({\n  stage: () => Session.get('stage.type'),\n  template: () => `${Session.get('stage.type')}_stage`,\n  lines: () => Session.get('stage.status'),\n});\n\nTracker.autorun(() => {\n  const glyph = Session.get('editor.glyph');\n  const json = JSON.stringify(glyph);\n  if (!glyph || json === last_json) {\n    return;\n  } else if (!last_glyph || glyph.character !== last_glyph.character) {\n    let last_completed_stage = types[0];\n    types.map((x) => { if (glyph.stages[x]) last_completed_stage = x; });\n    constructStage(last_completed_stage);\n  } else {\n    Meteor.call('saveGlyph', glyph,\n                (error, data) => { if (error) console.error(error) });\n    if (!_.isEqual(glyph.metadata, last_glyph.metadata)) {\n      stage.refreshUI(glyph.character, glyph.metadata);\n    }\n  }\n  last_glyph = glyph;\n  last_json = json;\n});\n\nMeteor.startup(() => {\n  $('body').on('keypress', (event) => {\n    const key = String.fromCharCode(event.which);\n    if (bindings.hasOwnProperty(key)) {\n      bindings[key]();\n    } else if ('1' <= key && key <= '9') {\n      const index = key.charCodeAt(0) - '1'.charCodeAt(0);\n      const href = $('.metadata .reference')[index].href;\n      window.open(href, '_blank').focus();\n    }\n  });\n  $(window).on('hashchange', loadCharacter);\n  cjklib.promise.then(loadCharacter).catch(console.error.bind(console));\n});\n"]},"sourceType":"module","externalDependencies":{},"hash":"82344f3dfb4ef7ece99742d1dc3fa629d2b41369"}
