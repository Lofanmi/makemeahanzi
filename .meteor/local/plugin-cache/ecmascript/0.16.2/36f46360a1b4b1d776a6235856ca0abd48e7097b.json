{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/strokes.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/strokes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/strokes.js"}},"code":"module.export({\n  StrokesStage: () => StrokesStage\n});\nlet AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage(v) {\n    AbstractStage = v;\n  }\n\n}, 0);\nlet assert;\nmodule.link(\"/lib/base\", {\n  assert(v) {\n    assert = v;\n  }\n\n}, 1);\nlet cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib(v) {\n    cjklib = v;\n  }\n\n}, 2);\nlet fixStrokes;\nmodule.link(\"/lib/stroke_caps/fixStrokes\", {\n  fixStrokes(v) {\n    fixStrokes = v;\n  }\n\n}, 3);\nlet stroke_extractor;\nmodule.link(\"/lib/stroke_extractor\", {\n  stroke_extractor(v) {\n    stroke_extractor = v;\n  }\n\n}, 4);\n\nconst getStatusLine = (actual, expected) => {\n  const actual_text = \"Selected \".concat(actual, \" stroke\").concat(actual === 1 ? '' : 's');\n\n  if (!expected) {\n    return {\n      cls: 'error',\n      message: \"\".concat(actual_text, \". True number unknown.\")\n    };\n  } else if (actual !== expected) {\n    return {\n      cls: 'error',\n      message: \"\".concat(actual_text, \", but need \").concat(expected, \".\")\n    };\n  }\n\n  return {\n    cls: 'success',\n    message: \"\".concat(actual_text, \".\")\n  };\n};\n\nconst getStrokePaths = (strokes, include, colors) => {\n  const result = [];\n\n  for (let i = 0; i < strokes.length; i++) {\n    const stroke = strokes[i];\n    const color = include[stroke] ? colors[i % colors.length] : 'gray';\n    result.push({\n      cls: 'selectable',\n      d: stroke,\n      fill: color,\n      stroke: 'black'\n    });\n  }\n\n  return result;\n};\n\nclass StrokesStage extends AbstractStage {\n  constructor(glyph) {\n    super('strokes');\n    const raw = stroke_extractor.getStrokes(glyph.stages.path, glyph.stages.bridges).strokes;\n    this.include = {};\n    this.original = {\n      corrected: fixStrokes(raw),\n      raw\n    };\n    this.original.corrected.map(x => this.include[x] = true);\n\n    if (glyph.stages.strokes) {\n      this.original.corrected.map(x => this.include[x] = false);\n      glyph.stages.strokes.corrected.map(x => this.include[x] = true);\n    }\n  }\n\n  getStageOutput() {\n    const fn = (_, i) => this.include[this.original.corrected[i]];\n\n    return {\n      raw: this.original.raw.filter(fn),\n      corrected: this.original.corrected.filter(fn)\n    };\n  }\n\n  handleEvent(event, template) {\n    assert(this.include.hasOwnProperty(template.d));\n    this.include[template.d] = !this.include[template.d];\n  }\n\n  refreshUI(character, metadata) {\n    const strokes = this.original.corrected;\n    Session.set('stage.paths', getStrokePaths(strokes, this.include, this.colors));\n    const data = cjklib.getCharacterData(character);\n    const actual = this.getStageOutput().corrected.length;\n    const expected = metadata.strokes || data.strokes;\n    Session.set('stage.status', [getStatusLine(actual, expected)]);\n  }\n\n}","map":{"version":3,"sources":["client/lib/strokes.js"],"names":["module","export","StrokesStage","AbstractStage","link","v","assert","cjklib","fixStrokes","stroke_extractor","getStatusLine","actual","expected","actual_text","cls","message","getStrokePaths","strokes","include","colors","result","i","length","stroke","color","push","d","fill","constructor","glyph","raw","getStrokes","stages","path","bridges","original","corrected","map","x","getStageOutput","fn","_","filter","handleEvent","event","template","hasOwnProperty","refreshUI","character","metadata","Session","set","data","getCharacterData"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\nimport {fixStrokes} from '/lib/stroke_caps/fixStrokes';\nimport {stroke_extractor} from '/lib/stroke_extractor';\n\nconst getStatusLine = (actual, expected) => {\n  const actual_text = `Selected ${actual} stroke${actual === 1 ? '' : 's'}`;\n  if (!expected) {\n    return {cls: 'error', message: `${actual_text}. True number unknown.`};\n  } else if (actual !== expected) {\n    return {cls: 'error', message: `${actual_text}, but need ${expected}.`};\n  }\n  return {cls: 'success', message: `${actual_text}.`};\n}\n\nconst getStrokePaths = (strokes, include, colors) => {\n  const result = [];\n  for (let i = 0; i < strokes.length; i++) {\n    const stroke = strokes[i];\n    const color = include[stroke] ? colors[i % colors.length] : 'gray';\n    result.push({cls: 'selectable', d: stroke, fill: color, stroke: 'black'});\n  }\n  return result;\n}\n\nclass StrokesStage extends AbstractStage {\n  constructor(glyph) {\n    super('strokes');\n    const raw = stroke_extractor.getStrokes(\n        glyph.stages.path, glyph.stages.bridges).strokes;\n    this.include = {};\n    this.original = {corrected: fixStrokes(raw), raw};\n    this.original.corrected.map((x) => this.include[x] = true);\n    if (glyph.stages.strokes) {\n      this.original.corrected.map((x) => this.include[x] = false);\n      glyph.stages.strokes.corrected.map((x) => this.include[x] = true);\n    }\n  }\n  getStageOutput() {\n    const fn = (_, i) => this.include[this.original.corrected[i]];\n    return {\n      raw: this.original.raw.filter(fn),\n      corrected: this.original.corrected.filter(fn),\n    };\n  }\n  handleEvent(event, template) {\n    assert(this.include.hasOwnProperty(template.d));\n    this.include[template.d] = !this.include[template.d];\n  }\n  refreshUI(character, metadata) {\n    const strokes = this.original.corrected;\n    Session.set('stage.paths',\n                getStrokePaths(strokes, this.include, this.colors));\n    const data = cjklib.getCharacterData(character);\n    const actual = this.getStageOutput().corrected.length;\n    const expected = metadata.strokes || data.strokes;\n    Session.set('stage.status', [getStatusLine(actual, expected)]);\n  }\n}\n\nexport {StrokesStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"36f46360a1b4b1d776a6235856ca0abd48e7097b"}
