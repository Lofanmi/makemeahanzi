{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/lib/pinyin_util.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"lib/pinyin_util.js","filename":"/Users/a37/code/github/makemeahanzi-tool/lib/pinyin_util.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/lib/pinyin_util.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/pinyin_util.js"}},"code":"module.export({\n  pinyin_util: function () {\n    return pinyin_util;\n  }\n});\nvar assert;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  }\n}, 0);\nvar vowel_to_tone = {\n  0: \"aeiouü\",\n  1: \"āēīōūǖ\",\n  2: \"áéíóúǘ\",\n  3: \"ǎěǐǒǔǚ\",\n  4: \"àèìòùǜ\"\n};\n\nvar tokenSet = function (tokens) {\n  var result = {};\n  tokens.split(' ').map(function (x) {\n    return result[x] = true;\n  });\n  return result;\n};\n\nvar consonants = tokenSet('b p m f d t n l g k h j q x zh ch sh r z c s y w');\nvar vowels = tokenSet('a ai an ang ao e ei en eng er i ia ian iang iao ie ' + 'in ing io iong iu o ong ou u ua uai uan uang ue ui ' + 'un uo v van vn');\nvar two_syllables = tokenSet('ia ian iang iao ie io iong iu ua uai uan ' + 'uang ue ui uo van');\nvar pinyin_util = {};\n\npinyin_util.dropTones = function (pinyin, append_number) {\n  for (var i = 0; i < pinyin.length; i++) {\n    for (var option = 1; option <= 4; option++) {\n      var index = vowel_to_tone[option].indexOf(pinyin[i]);\n\n      if (index >= 0) {\n        var toneless = 'aeiouv'[index];\n        pinyin = pinyin.substr(0, i) + toneless + pinyin.substr(i + 1);\n\n        if (append_number) {\n          return \"\" + pinyin + option;\n        }\n      }\n    }\n  }\n\n  return pinyin;\n};\n\npinyin_util.numberedPinyinToTonePinyin = function (numbered) {\n  assert(numbered && numbered === numbered.toLowerCase());\n  var tone = 0;\n\n  if ('01234'.indexOf(numbered[numbered.length - 1]) >= 0) {\n    tone = parseInt(numbered[numbered.length - 1], 10);\n    numbered = numbered.substr(0, numbered.length - 1);\n  }\n\n  for (var i = 0; i < numbered.length; i++) {\n    for (var option = 1; option <= 4; option++) {\n      var index = vowel_to_tone[option].indexOf(numbered[i]);\n\n      if (index >= 0) {\n        tone = option;\n        var toneless = 'aeiouv'[index];\n        numbered = numbered.substr(0, i) + toneless + numbered.substr(i + 1);\n      }\n    }\n  }\n\n  var consonant = '';\n\n  for (var _i = 1; _i < numbered.length; _i++) {\n    var candidate = numbered.substr(0, _i);\n\n    if (consonants[candidate]) {\n      consonant = candidate;\n    } else {\n      break;\n    }\n  }\n\n  var vowel = numbered.substr(consonant.length);\n  assert((!consonant || consonants[consonant]) && vowels[vowel]);\n\n  if (two_syllables[vowel]) {\n    var _index = 'aeiouv'.indexOf(vowel[1]);\n\n    vowel = vowel[0] + vowel_to_tone[tone][_index] + vowel.substr(2);\n  } else {\n    var _index2 = 'aeiouv'.indexOf(vowel[0]);\n\n    assert(_index2 >= 0);\n    vowel = vowel_to_tone[tone][_index2] + vowel.substr(1);\n  }\n\n  return consonant + vowel.replace('v', 'ü');\n};\n\npinyin_util.tonePinyinToNumberedPinyin = function (tone) {\n  return pinyin_util.dropTones(tone, true\n  /* append_number */\n  );\n};","map":{"version":3,"sources":["lib/pinyin_util.js"],"names":["module","export","pinyin_util","assert","link","v","vowel_to_tone","tokenSet","tokens","result","split","map","x","consonants","vowels","two_syllables","dropTones","pinyin","append_number","i","length","option","index","indexOf","toneless","substr","numberedPinyinToTonePinyin","numbered","toLowerCase","tone","parseInt","consonant","candidate","vowel","replace","tonePinyinToNumberedPinyin"],"mappings":"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","sourcesContent":["import {assert} from '/lib/base';\n\nconst vowel_to_tone =\n    {0: \"aeiouü\", 1: \"āēīōūǖ\", 2: \"áéíóúǘ\", 3: \"ǎěǐǒǔǚ\", 4: \"àèìòùǜ\"};\n\nconst tokenSet = (tokens) => {\n  const result = {};\n  tokens.split(' ').map((x) => result[x] = true);\n  return result;\n}\n\nconst consonants = tokenSet('b p m f d t n l g k h j q x zh ch sh r z c s y w');\nconst vowels = tokenSet('a ai an ang ao e ei en eng er i ia ian iang iao ie ' +\n                        'in ing io iong iu o ong ou u ua uai uan uang ue ui ' +\n                        'un uo v van vn');\nconst two_syllables = tokenSet('ia ian iang iao ie io iong iu ua uai uan ' +\n                               'uang ue ui uo van');\n\nconst pinyin_util = {};\n\npinyin_util.dropTones = (pinyin, append_number) => {\n  for (let i = 0; i < pinyin.length; i++) {\n    for (let option = 1; option <= 4; option++) {\n      const index = vowel_to_tone[option].indexOf(pinyin[i]);\n      if (index >= 0) {\n        const toneless = 'aeiouv'[index];\n        pinyin = pinyin.substr(0, i) + toneless + pinyin.substr(i + 1);\n        if (append_number) {\n          return `${pinyin}${option}`;\n        }\n      }\n    }\n  }\n  return pinyin;\n}\n\npinyin_util.numberedPinyinToTonePinyin = (numbered) => {\n  assert(numbered && numbered === numbered.toLowerCase());\n  let tone = 0;\n  if ('01234'.indexOf(numbered[numbered.length - 1]) >= 0) {\n    tone = parseInt(numbered[numbered.length - 1], 10);\n    numbered = numbered.substr(0, numbered.length - 1);\n  }\n  for (let i = 0; i < numbered.length; i++) {\n    for (let option = 1; option <= 4; option++) {\n      const index = vowel_to_tone[option].indexOf(numbered[i]);\n      if (index >= 0) {\n        tone = option;\n        const toneless = 'aeiouv'[index];\n        numbered = numbered.substr(0, i) + toneless + numbered.substr(i + 1);\n      }\n    }\n  }\n  let consonant = '';\n  for (let i = 1; i < numbered.length; i++) {\n    const candidate = numbered.substr(0, i);\n    if (consonants[candidate]) {\n      consonant = candidate;\n    } else {\n      break;\n    }\n  }\n  let vowel = numbered.substr(consonant.length);\n  assert((!consonant || consonants[consonant]) && vowels[vowel]);\n  if (two_syllables[vowel]) {\n    const index = 'aeiouv'.indexOf(vowel[1]);\n    vowel = vowel[0] + vowel_to_tone[tone][index] + vowel.substr(2);\n  } else {\n    const index = 'aeiouv'.indexOf(vowel[0]);\n    assert(index >= 0);\n    vowel = vowel_to_tone[tone][index] + vowel.substr(1);\n  }\n  return consonant + vowel.replace('v', 'ü');\n}\n\npinyin_util.tonePinyinToNumberedPinyin = (tone) => {\n  return pinyin_util.dropTones(tone, true /* append_number */);\n}\n\nexport {pinyin_util};\n"]},"sourceType":"module","externalDependencies":{},"hash":"cc786d425dde7db1a47e083945bc9453fa64f343"}
