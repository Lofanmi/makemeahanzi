{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/server/training.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/training.js","filename":"/Users/a37/code/github/makemeahanzi-tool/server/training.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/server/training.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/training.js"}},"code":"let assert;\nmodule.link(\"/lib/base\", {\n  assert(v) {\n    assert = v;\n  }\n\n}, 0);\nlet Glyphs;\nmodule.link(\"/lib/glyphs\", {\n  Glyphs(v) {\n    Glyphs = v;\n  }\n\n}, 1);\n\nfunction evaluate(glyphs, classifier) {\n  var num_correct = 0;\n\n  for (var i = 0; i < glyphs.length; i++) {\n    if (check_classifier_on_glyph(glyphs[i], classifier)) {\n      num_correct += 1;\n    }\n  }\n\n  return num_correct / glyphs.length;\n}\n\nfunction train_neural_net() {\n  var glyphs = Glyphs.find({\n    'manual.verified': true\n  }).fetch();\n\n  var sample = _.sample(glyphs, 400);\n\n  console.log('Hand-tuned accuracy:', evaluate(sample, hand_tuned_classifier));\n  var training_data = [];\n\n  for (var i = 0; i < glyphs.length; i++) {\n    var glyph_data = get_glyph_training_data(glyphs[i]);\n    var positive_data = glyph_data.filter(function (x) {\n      return x[1] > 0;\n    });\n    var negative_data = glyph_data.filter(function (x) {\n      return x[1] === 0;\n    });\n\n    if (positive_data.length > negative_data.length) {\n      positive_data = _.sample(positive_data, negative_data.length);\n    } else {\n      negative_data = _.sample(negative_data, positive_data.length);\n    }\n\n    glyph_data = negative_data.concat(positive_data);\n\n    for (var j = 0; j < glyph_data.length; j++) {\n      training_data.push(glyph_data[j]);\n    }\n  }\n\n  console.log('Got ' + training_data.length + ' rows of training data.');\n  var net = new convnetjs.Net();\n  net.makeLayers([{\n    type: 'input',\n    out_sx: 1,\n    out_sy: 1,\n    out_depth: 8\n  }, {\n    type: 'fc',\n    num_neurons: 8,\n    activation: 'tanh'\n  }, {\n    type: 'fc',\n    num_neurons: 8,\n    activation: 'tanh'\n  }, {\n    type: 'softmax',\n    num_classes: 2\n  }]);\n  var trainer = new convnetjs.Trainer(net, {\n    method: 'adadelta',\n    l2_decay: 0.001,\n    batch_size: 10\n  });\n  var input = new convnetjs.Vol(1, 1, 8);\n\n  for (var iteration = 0; iteration < 10; iteration++) {\n    var loss = 0;\n\n    var round_data = _.sample(training_data, 4000);\n\n    for (var i = 0; i < round_data.length; i++) {\n      assert(input.w.length === round_data[i][0].length);\n      input.w = round_data[i][0];\n      var stats = trainer.train(input, round_data[i][1]);\n      assert(!isNaN(stats.loss));\n      loss += stats.loss;\n    }\n\n    console.log('Iteration', iteration, 'mean loss:', loss / round_data.length);\n  }\n\n  console.log('Trained neural network:', JSON.stringify(net.toJSON()));\n\n  function net_classifier(features) {\n    assert(input.w.length === features.length);\n    input.w = features;\n    var softmax = net.forward(input).w;\n    assert(softmax.length === 2);\n    return softmax[1] - softmax[0];\n  }\n\n  console.log('Neural-net accuracy:', evaluate(sample, net_classifier));\n\n  function combined_classifier(weight) {\n    return function (features) {\n      return hand_tuned_classifier(features) + weight * net_classifier(features);\n    };\n  }\n\n  var weights = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1];\n\n  for (var i = 0; i < weights.length; i++) {\n    console.log('Weight', weights[i], 'combined accuracy:', evaluate(sample, combined_classifier(weights[i])));\n  }\n}","map":{"version":3,"sources":["server/training.js"],"names":["assert","module","link","v","Glyphs","evaluate","glyphs","classifier","num_correct","i","length","check_classifier_on_glyph","train_neural_net","find","fetch","sample","_","console","log","hand_tuned_classifier","training_data","glyph_data","get_glyph_training_data","positive_data","filter","x","negative_data","concat","j","push","net","convnetjs","Net","makeLayers","type","out_sx","out_sy","out_depth","num_neurons","activation","num_classes","trainer","Trainer","method","l2_decay","batch_size","input","Vol","iteration","loss","round_data","w","stats","train","isNaN","JSON","stringify","toJSON","net_classifier","features","softmax","forward","combined_classifier","weight","weights"],"mappings":"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","sourcesContent":["import {assert} from '/lib/base';\nimport {Glyphs} from '/lib/glyphs';\n\nfunction evaluate(glyphs, classifier) {\n  var num_correct = 0;\n  for (var i = 0; i < glyphs.length; i++) {\n    if (check_classifier_on_glyph(glyphs[i], classifier)) {\n      num_correct += 1;\n    }\n  }\n  return num_correct/glyphs.length;\n}\n\nfunction train_neural_net() {\n  var glyphs = Glyphs.find({'manual.verified': true}).fetch();\n  var sample = _.sample(glyphs, 400);\n  console.log('Hand-tuned accuracy:', evaluate(sample, hand_tuned_classifier));\n\n  var training_data = [];\n  for (var i = 0; i < glyphs.length; i++) {\n    var glyph_data = get_glyph_training_data(glyphs[i]);\n    var positive_data = glyph_data.filter(function(x) { return x[1] > 0; });\n    var negative_data = glyph_data.filter(function(x) { return x[1] === 0; });\n    if (positive_data.length > negative_data.length) {\n      positive_data = _.sample(positive_data, negative_data.length);\n    } else {\n      negative_data = _.sample(negative_data, positive_data.length);\n    }\n    glyph_data = negative_data.concat(positive_data);\n    for (var j = 0; j < glyph_data.length; j++) {\n      training_data.push(glyph_data[j]);\n    }\n  }\n  console.log('Got ' + training_data.length + ' rows of training data.');\n\n  var net = new convnetjs.Net();\n  net.makeLayers([\n    {type: 'input', out_sx: 1, out_sy: 1, out_depth: 8},\n    {type: 'fc', num_neurons: 8, activation: 'tanh'},\n    {type: 'fc', num_neurons: 8, activation: 'tanh'},\n    {type: 'softmax', num_classes: 2},\n  ]);\n  var trainer = new convnetjs.Trainer(\n      net, {method: 'adadelta', l2_decay: 0.001, batch_size: 10});\n  var input = new convnetjs.Vol(1, 1, 8);\n  for (var iteration = 0; iteration < 10; iteration++) {\n    var loss = 0;\n    var round_data = _.sample(training_data, 4000);\n    for (var i = 0; i < round_data.length; i++) {\n      assert(input.w.length === round_data[i][0].length);\n      input.w = round_data[i][0];\n      var stats = trainer.train(input, round_data[i][1]);\n      assert(!isNaN(stats.loss))\n      loss += stats.loss;\n    }\n    console.log('Iteration', iteration, 'mean loss:', loss/round_data.length);\n  }\n  console.log('Trained neural network:', JSON.stringify(net.toJSON()));\n\n  function net_classifier(features) {\n    assert(input.w.length === features.length);\n    input.w = features;\n    var softmax = net.forward(input).w;\n    assert(softmax.length === 2);\n    return softmax[1] - softmax[0];\n  }\n  console.log('Neural-net accuracy:', evaluate(sample, net_classifier));\n\n  function combined_classifier(weight) {\n    return function(features) {\n      return hand_tuned_classifier(features) + weight*net_classifier(features);\n    }\n  }\n  var weights = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1];\n  for (var i = 0; i < weights.length; i++) {\n    console.log('Weight',  weights[i], 'combined accuracy:',\n                evaluate(sample, combined_classifier(weights[i])));\n  }\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"05e7aa7468a9f6f95586ac293aab83e0fd0d3153"}
