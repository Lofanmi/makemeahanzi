{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/path.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/path.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/path.js"}},"code":"module.export({\n  PathStage: () => PathStage\n});\nlet opentype;\nmodule.link(\"/client/external/opentype/0.4.10/opentype\", {\n  default(v) {\n    opentype = v;\n  }\n\n}, 0);\nlet AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage(v) {\n    AbstractStage = v;\n  }\n\n}, 1);\nlet assert, Point;\nmodule.link(\"/lib/base\", {\n  assert(v) {\n    assert = v;\n  },\n\n  Point(v) {\n    Point = v;\n  }\n\n}, 2);\nlet Glyphs;\nmodule.link(\"/lib/glyphs\", {\n  Glyphs(v) {\n    Glyphs = v;\n  }\n\n}, 3);\nlet svg;\nmodule.link(\"/lib/svg\", {\n  svg(v) {\n    svg = v;\n  }\n\n}, 4);\nlet stage = undefined;\n\nclass PathStage extends AbstractStage {\n  constructor(glyph) {\n    super('path');\n    this.adjusted = glyph.stages.path;\n    this.character = glyph.character;\n    this.alternative = undefined;\n    this.error = 'No path data.';\n    stage = this;\n  }\n\n  onGetPath(error, path) {\n    Session.set('modal.value', undefined);\n    this.adjusted = path;\n    this.error = error;\n    this.forceRefresh();\n  }\n\n  refreshUI() {\n    const d = this.adjusted;\n    Session.set('stage.paths', [{\n      d: d,\n      fill: 'gray',\n      stroke: 'gray'\n    }]);\n    Session.set('stage.status', d ? [{\n      cls: 'success',\n      message: 'Got path data.'\n    }] : [{\n      cls: 'error',\n      message: this.error\n    }]);\n    Session.set('stages.path.alternative', this.alternative);\n  }\n\n} // We avoid arrow functions in this map so that this is bound to the template.\n\n\nTemplate.path_stage.events({\n  'blur .value': function (event) {\n    const text = $(event.target).text();\n    const value = text.length === 1 && text !== '?' ? text : undefined;\n\n    if (value === stage.alternative) {\n      $(event.target).text(value || '?');\n    } else {\n      stage.alternative = value;\n      stage.forceRefresh();\n    }\n  },\n  'click .option': function (event) {\n    const label = this.label;\n    const character = stage.character;\n    assert(character.length === 1);\n    Session.set('modal.text', \"Loading \".concat(label, \"...\"));\n    Session.set('modal.value', 0);\n    opentype.load(this.font, (error, font) => {\n      stage.alternative = undefined;\n\n      if (error) {\n        stage.onGetPath(\"Error loading \".concat(label, \": \").concat(error));\n        return;\n      }\n\n      Session.set('modal.text', \"Extracting \".concat(character, \" from \").concat(label, \"...\"));\n      Session.set('modal.value', 0.5);\n      const index = font.charToGlyphIndex(character);\n      const glyph = font.glyphs.get(index);\n\n      if (glyph.unicode !== character.codePointAt(0)) {\n        stage.onGetPath(\"\".concat(character, \" is not present in \").concat(label, \".\"));\n        return;\n      } // TODO(skishore): We may want a try/catch around this call.\n\n\n      const path = svg.convertCommandsToPath(glyph.path.commands);\n      stage.onGetPath(undefined, path);\n    });\n  }\n});\nTemplate.path_stage.helpers({\n  alternative: () => Session.get('stages.path.alternative') || '?',\n  options: () => [{\n    font: 'arphic/gkai00mp.ttf',\n    label: 'AR PL KaitiM GB'\n  }, {\n    font: 'arphic/UKaiCN.ttf',\n    label: 'AR PL UKai'\n  }]\n});\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const alternative = Session.get('stages.path.alternative');\n\n    if (alternative) {\n      Meteor.subscribe('getAllGlyphs', [alternative]);\n      const glyph = Glyphs.findOne({\n        character: alternative\n      });\n\n      if (!glyph) {\n        stage.onGetPath(\"Could not find glyph for \".concat(alternative, \".\"));\n      } else if (!glyph.stages.path) {\n        stage.onGetPath(\"No available path for \".concat(alternative, \".\"));\n      } else {\n        stage.onGetPath(undefined, glyph.stages.path);\n      }\n    }\n  });\n});","map":{"version":3,"sources":["client/lib/path.js"],"names":["module","export","PathStage","opentype","link","default","v","AbstractStage","assert","Point","Glyphs","svg","stage","undefined","constructor","glyph","adjusted","stages","path","character","alternative","error","onGetPath","Session","set","forceRefresh","refreshUI","d","fill","stroke","cls","message","Template","path_stage","events","event","text","$","target","value","length","label","load","font","index","charToGlyphIndex","glyphs","get","unicode","codePointAt","convertCommandsToPath","commands","helpers","options","Meteor","startup","Tracker","autorun","subscribe","findOne"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,MAAIA;AAAf,CAAd;AAAyC,IAAIC,QAAJ;AAAaH,MAAM,CAACI,IAAP,CAAY,2CAAZ,EAAwD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,QAAQ,GAACG,CAAT;AAAW;;AAAvB,CAAxD,EAAiF,CAAjF;AAAoF,IAAIC,aAAJ;AAAkBP,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACG,EAAAA,aAAa,CAACD,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAAlC,CAAnC,EAAuE,CAAvE;AAA0E,IAAIE,MAAJ,EAAWC,KAAX;AAAiBT,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACI,EAAAA,MAAM,CAACF,CAAD,EAAG;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS,GAApB;;AAAqBG,EAAAA,KAAK,CAACH,CAAD,EAAG;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ;;AAAtC,CAAxB,EAAgE,CAAhE;AAAmE,IAAII,MAAJ;AAAWV,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA0B;AAACM,EAAAA,MAAM,CAACJ,CAAD,EAAG;AAACI,IAAAA,MAAM,GAACJ,CAAP;AAAS;;AAApB,CAA1B,EAAgD,CAAhD;AAAmD,IAAIK,GAAJ;AAAQX,MAAM,CAACI,IAAP,CAAY,UAAZ,EAAuB;AAACO,EAAAA,GAAG,CAACL,CAAD,EAAG;AAACK,IAAAA,GAAG,GAACL,CAAJ;AAAM;;AAAd,CAAvB,EAAuC,CAAvC;AAOhY,IAAIM,KAAK,GAAGC,SAAZ;;AAEA,MAAMX,SAAN,SAAwBK,aAAxB,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAM,MAAN;AACA,SAAKC,QAAL,GAAgBD,KAAK,CAACE,MAAN,CAAaC,IAA7B;AACA,SAAKC,SAAL,GAAiBJ,KAAK,CAACI,SAAvB;AACA,SAAKC,WAAL,GAAmBP,SAAnB;AACA,SAAKQ,KAAL,GAAa,eAAb;AACAT,IAAAA,KAAK,GAAG,IAAR;AACD;;AACDU,EAAAA,SAAS,CAACD,KAAD,EAAQH,IAAR,EAAc;AACrBK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BX,SAA3B;AACA,SAAKG,QAAL,GAAgBE,IAAhB;AACA,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAKI,YAAL;AACD;;AACDC,EAAAA,SAAS,GAAG;AACV,UAAMC,CAAC,GAAG,KAAKX,QAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,CAAC;AAACG,MAAAA,CAAC,EAAEA,CAAJ;AAAOC,MAAAA,IAAI,EAAE,MAAb;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAAD,CAA3B;AACAN,IAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEEG,CAAC,GAAG,CAAC;AAACG,MAAAA,GAAG,EAAE,SAAN;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAD,CAAH,GACG,CAAC;AAACD,MAAAA,GAAG,EAAE,OAAN;AAAeC,MAAAA,OAAO,EAAE,KAAKV;AAA7B,KAAD,CAHN;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKJ,WAA5C;AACD;;AAvBmC,C,CA0BtC;;;AACAY,QAAQ,CAACC,UAAT,CAAoBC,MAApB,CAA2B;AACzB,iBAAe,UAASC,KAAT,EAAgB;AAC7B,UAAMC,IAAI,GAAGC,CAAC,CAACF,KAAK,CAACG,MAAP,CAAD,CAAgBF,IAAhB,EAAb;AACA,UAAMG,KAAK,GAAGH,IAAI,CAACI,MAAL,KAAgB,CAAhB,IAAqBJ,IAAI,KAAK,GAA9B,GAAoCA,IAApC,GAA2CvB,SAAzD;;AACA,QAAI0B,KAAK,KAAK3B,KAAK,CAACQ,WAApB,EAAiC;AAC/BiB,MAAAA,CAAC,CAACF,KAAK,CAACG,MAAP,CAAD,CAAgBF,IAAhB,CAAqBG,KAAK,IAAI,GAA9B;AACD,KAFD,MAEO;AACL3B,MAAAA,KAAK,CAACQ,WAAN,GAAoBmB,KAApB;AACA3B,MAAAA,KAAK,CAACa,YAAN;AACD;AACF,GAVwB;AAWzB,mBAAiB,UAASU,KAAT,EAAgB;AAC/B,UAAMM,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMtB,SAAS,GAAGP,KAAK,CAACO,SAAxB;AACAX,IAAAA,MAAM,CAACW,SAAS,CAACqB,MAAV,KAAqB,CAAtB,CAAN;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,oBAAqCiB,KAArC;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,CAA3B;AACArB,IAAAA,QAAQ,CAACuC,IAAT,CAAc,KAAKC,IAAnB,EAAyB,CAACtB,KAAD,EAAQsB,IAAR,KAAiB;AACxC/B,MAAAA,KAAK,CAACQ,WAAN,GAAoBP,SAApB;;AACA,UAAIQ,KAAJ,EAAW;AACTT,QAAAA,KAAK,CAACU,SAAN,yBAAiCmB,KAAjC,eAA2CpB,KAA3C;AACA;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,uBAAwCL,SAAxC,mBAA0DsB,KAA1D;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,GAA3B;AACA,YAAMoB,KAAK,GAAGD,IAAI,CAACE,gBAAL,CAAsB1B,SAAtB,CAAd;AACA,YAAMJ,KAAK,GAAG4B,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgBH,KAAhB,CAAd;;AACA,UAAI7B,KAAK,CAACiC,OAAN,KAAkB7B,SAAS,CAAC8B,WAAV,CAAsB,CAAtB,CAAtB,EAAgD;AAC9CrC,QAAAA,KAAK,CAACU,SAAN,WAAmBH,SAAnB,gCAAkDsB,KAAlD;AACA;AACD,OAbuC,CAcxC;;;AACA,YAAMvB,IAAI,GAAGP,GAAG,CAACuC,qBAAJ,CAA0BnC,KAAK,CAACG,IAAN,CAAWiC,QAArC,CAAb;AACAvC,MAAAA,KAAK,CAACU,SAAN,CAAgBT,SAAhB,EAA2BK,IAA3B;AACD,KAjBD;AAkBD;AAnCwB,CAA3B;AAsCAc,QAAQ,CAACC,UAAT,CAAoBmB,OAApB,CAA4B;AAC1BhC,EAAAA,WAAW,EAAE,MAAMG,OAAO,CAACwB,GAAR,CAAY,yBAAZ,KAA0C,GADnC;AAE1BM,EAAAA,OAAO,EAAE,MAAM,CAAC;AAACV,IAAAA,IAAI,EAAE,qBAAP;AAA8BF,IAAAA,KAAK,EAAE;AAArC,GAAD,EACC;AAACE,IAAAA,IAAI,EAAE,mBAAP;AAA4BF,IAAAA,KAAK,EAAE;AAAnC,GADD;AAFW,CAA5B;AAMAa,MAAM,CAACC,OAAP,CAAe,MAAM;AACnBC,EAAAA,OAAO,CAACC,OAAR,CAAgB,MAAM;AACpB,UAAMrC,WAAW,GAAGG,OAAO,CAACwB,GAAR,CAAY,yBAAZ,CAApB;;AACA,QAAI3B,WAAJ,EAAiB;AACfkC,MAAAA,MAAM,CAACI,SAAP,CAAiB,cAAjB,EAAiC,CAACtC,WAAD,CAAjC;AACA,YAAML,KAAK,GAAGL,MAAM,CAACiD,OAAP,CAAe;AAACxC,QAAAA,SAAS,EAAEC;AAAZ,OAAf,CAAd;;AACA,UAAI,CAACL,KAAL,EAAY;AACVH,QAAAA,KAAK,CAACU,SAAN,oCAA4CF,WAA5C;AACD,OAFD,MAEO,IAAI,CAACL,KAAK,CAACE,MAAN,CAAaC,IAAlB,EAAwB;AAC7BN,QAAAA,KAAK,CAACU,SAAN,iCAAyCF,WAAzC;AACD,OAFM,MAEA;AACLR,QAAAA,KAAK,CAACU,SAAN,CAAgBT,SAAhB,EAA2BE,KAAK,CAACE,MAAN,CAAaC,IAAxC;AACD;AACF;AACF,GAbD;AAcD,CAfD","sourcesContent":["import opentype from '/client/external/opentype/0.4.10/opentype';\n\nimport {AbstractStage} from '/client/lib/abstract';\nimport {assert, Point} from '/lib/base';\nimport {Glyphs} from '/lib/glyphs';\nimport {svg} from '/lib/svg';\n\nlet stage = undefined;\n\nclass PathStage extends AbstractStage {\n  constructor(glyph) {\n    super('path');\n    this.adjusted = glyph.stages.path;\n    this.character = glyph.character;\n    this.alternative = undefined;\n    this.error = 'No path data.';\n    stage = this;\n  }\n  onGetPath(error, path) {\n    Session.set('modal.value', undefined);\n    this.adjusted = path;\n    this.error = error;\n    this.forceRefresh();\n  }\n  refreshUI() {\n    const d = this.adjusted;\n    Session.set('stage.paths', [{d: d, fill: 'gray', stroke: 'gray'}]);\n    Session.set(\n      'stage.status',\n      d ? [{cls: 'success', message: 'Got path data.'}]\n        : [{cls: 'error', message: this.error}]);\n    Session.set('stages.path.alternative', this.alternative);\n  }\n}\n\n// We avoid arrow functions in this map so that this is bound to the template.\nTemplate.path_stage.events({\n  'blur .value': function(event) {\n    const text = $(event.target).text();\n    const value = text.length === 1 && text !== '?' ? text : undefined;\n    if (value === stage.alternative) {\n      $(event.target).text(value || '?');\n    } else {\n      stage.alternative = value;\n      stage.forceRefresh();\n    }\n  },\n  'click .option': function(event) {\n    const label = this.label;\n    const character = stage.character;\n    assert(character.length === 1);\n    Session.set('modal.text', `Loading ${label}...`);\n    Session.set('modal.value', 0);\n    opentype.load(this.font, (error, font) => {\n      stage.alternative = undefined;\n      if (error) {\n        stage.onGetPath(`Error loading ${label}: ${error}`);\n        return;\n      }\n      Session.set('modal.text', `Extracting ${character} from ${label}...`);\n      Session.set('modal.value', 0.5);\n      const index = font.charToGlyphIndex(character);\n      const glyph = font.glyphs.get(index);\n      if (glyph.unicode !== character.codePointAt(0)) {\n        stage.onGetPath(`${character} is not present in ${label}.`);\n        return;\n      }\n      // TODO(skishore): We may want a try/catch around this call.\n      const path = svg.convertCommandsToPath(glyph.path.commands);\n      stage.onGetPath(undefined, path);\n    });\n  },\n});\n\nTemplate.path_stage.helpers({\n  alternative: () => Session.get('stages.path.alternative') || '?',\n  options: () => [{font: 'arphic/gkai00mp.ttf', label: 'AR PL KaitiM GB'},\n                  {font: 'arphic/UKaiCN.ttf', label: 'AR PL UKai'}],\n});\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const alternative = Session.get('stages.path.alternative');\n    if (alternative) {\n      Meteor.subscribe('getAllGlyphs', [alternative]);\n      const glyph = Glyphs.findOne({character: alternative});\n      if (!glyph) {\n        stage.onGetPath(`Could not find glyph for ${alternative}.`);\n      } else if (!glyph.stages.path) {\n        stage.onGetPath(`No available path for ${alternative}.`);\n      } else {\n        stage.onGetPath(undefined, glyph.stages.path);\n      }\n    }\n  });\n});\n\nexport {PathStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"7c013b665f3a8bc91c13f5d5bdf3c043166fbc4e"}
