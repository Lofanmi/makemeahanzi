{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/bridges.js","filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/client/lib/bridges.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/bridges.js"}},"code":"module.export({\n  BridgesStage: () => BridgesStage\n});\nlet AbstractStage;\nmodule.link(\"/client/lib/abstract\", {\n  AbstractStage(v) {\n    AbstractStage = v;\n  }\n\n}, 0);\nlet Point;\nmodule.link(\"/lib/base\", {\n  Point(v) {\n    Point = v;\n  }\n\n}, 1);\nlet stroke_extractor;\nmodule.link(\"/lib/stroke_extractor\", {\n  stroke_extractor(v) {\n    stroke_extractor = v;\n  }\n\n}, 2);\n\nconst bridgeKey = bridge => bridge.map(Point.key).join('-');\n\nconst removeBridge = (bridges, bridge) => {\n  const keys = {};\n  keys[bridgeKey(bridge)] = true;\n  keys[bridgeKey([bridge[1], bridge[0]])] = true;\n  return bridges.filter(bridge => !keys[bridgeKey(bridge)]);\n};\n\nclass BridgesStage extends AbstractStage {\n  constructor(glyph) {\n    super('bridges');\n    const bridges = stroke_extractor.getBridges(glyph.stages.path);\n    this.original = bridges.bridges;\n    this.adjusted = glyph.stages.bridges || this.original;\n    this.endpoints = bridges.endpoints.reduce((x, y) => x.concat(y), []);\n    this.path = glyph.stages.path;\n    this.selected_point = undefined;\n  }\n\n  handleClickOnBridge(bridge) {\n    this.adjusted = removeBridge(this.adjusted, bridge);\n  }\n\n  handleClickOnPoint(point) {\n    if (this.selected_point === undefined) {\n      this.selected_point = point;\n      return;\n    } else if (Point.equal(point, this.selected_point)) {\n      this.selected_point = undefined;\n      return;\n    }\n\n    const bridge = [point, this.selected_point];\n    this.selected_point = undefined;\n    const without = removeBridge(this.adjusted, bridge);\n\n    if (without.length < this.adjusted.length) {\n      return;\n    }\n\n    this.adjusted.push(bridge);\n  }\n\n  handleEvent(event, template) {\n    if (template.x1 !== undefined) {\n      const bridge = [[template.x1, template.y1], [template.x2, template.y2]];\n      this.handleClickOnBridge(bridge);\n    } else if (template.cx !== undefined) {\n      this.handleClickOnPoint([template.cx, template.cy]);\n    }\n  }\n\n  refreshUI() {\n    Session.set('stage.paths', [{\n      d: this.path,\n      fill: 'gray',\n      stroke: 'gray'\n    }]);\n    const keys = {};\n    this.original.map(bridge => {\n      keys[bridgeKey(bridge)] = true;\n      keys[bridgeKey([bridge[1], bridge[0]])] = true;\n    });\n    Session.set('stage.lines', this.adjusted.map(bridge => ({\n      cls: 'selectable',\n      stroke: keys[bridgeKey(bridge)] ? 'red' : 'purple',\n      x1: bridge[0][0],\n      y1: bridge[0][1],\n      x2: bridge[1][0],\n      y2: bridge[1][1]\n    })));\n    Session.set('stage.points', this.endpoints.map(endpoint => {\n      let color = endpoint.corner ? 'red' : 'black';\n\n      if (this.selected_point && Point.equal(endpoint.point, this.selected_point)) {\n        color = 'purple';\n      }\n\n      return {\n        cls: 'selectable',\n        cx: endpoint.point[0],\n        cy: endpoint.point[1],\n        fill: color,\n        stroke: color\n      };\n    }));\n    const strokes = stroke_extractor.getStrokes(this.path, this.adjusted);\n    const n = strokes.strokes.length;\n    const message = \"Extracted \".concat(n, \" stroke\").concat(n == 1 ? '' : 's', \".\");\n    const entry = {\n      cls: 'success',\n      message: message\n    };\n    Session.set('stage.status', strokes.log.concat([entry]));\n  }\n\n}","map":{"version":3,"sources":["client/lib/bridges.js"],"names":["module","export","BridgesStage","AbstractStage","link","v","Point","stroke_extractor","bridgeKey","bridge","map","key","join","removeBridge","bridges","keys","filter","constructor","glyph","getBridges","stages","path","original","adjusted","endpoints","reduce","x","y","concat","selected_point","undefined","handleClickOnBridge","handleClickOnPoint","point","equal","without","length","push","handleEvent","event","template","x1","y1","x2","y2","cx","cy","refreshUI","Session","set","d","fill","stroke","cls","endpoint","color","corner","strokes","getStrokes","n","message","entry","log"],"mappings":"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","sourcesContent":["import {AbstractStage} from '/client/lib/abstract';\nimport {Point} from '/lib/base';\nimport {stroke_extractor} from '/lib/stroke_extractor';\n\nconst bridgeKey = (bridge) => bridge.map(Point.key).join('-');\n\nconst removeBridge = (bridges, bridge) => {\n  const keys = {};\n  keys[bridgeKey(bridge)] = true;\n  keys[bridgeKey([bridge[1], bridge[0]])] = true;\n  return bridges.filter((bridge) => !keys[bridgeKey(bridge)]);\n}\n\nclass BridgesStage extends AbstractStage {\n  constructor(glyph) {\n    super('bridges');\n    const bridges = stroke_extractor.getBridges(glyph.stages.path);\n    this.original = bridges.bridges;\n    this.adjusted = glyph.stages.bridges || this.original;\n    this.endpoints = bridges.endpoints.reduce((x, y) => x.concat(y), []);\n    this.path = glyph.stages.path;\n    this.selected_point = undefined;\n  }\n  handleClickOnBridge(bridge) {\n    this.adjusted = removeBridge(this.adjusted, bridge);\n  }\n  handleClickOnPoint(point) {\n    if (this.selected_point === undefined) {\n      this.selected_point = point;\n      return;\n    } else if (Point.equal(point, this.selected_point)) {\n      this.selected_point = undefined;\n      return;\n    }\n    const bridge = [point, this.selected_point];\n    this.selected_point = undefined;\n    const without = removeBridge(this.adjusted, bridge);\n    if (without.length < this.adjusted.length) {\n      return;\n    }\n    this.adjusted.push(bridge);\n  }\n  handleEvent(event, template) {\n    if (template.x1 !== undefined) {\n      const bridge = [[template.x1, template.y1], [template.x2, template.y2]];\n      this.handleClickOnBridge(bridge);\n    } else if (template.cx !== undefined) {\n      this.handleClickOnPoint([template.cx, template.cy]);\n    }\n  }\n  refreshUI() {\n    Session.set('stage.paths', [{d: this.path, fill: 'gray', stroke: 'gray'}]);\n    const keys = {};\n    this.original.map((bridge) => {\n      keys[bridgeKey(bridge)] = true;\n      keys[bridgeKey([bridge[1], bridge[0]])] = true;\n    });\n    Session.set('stage.lines', this.adjusted.map((bridge) => ({\n      cls: 'selectable',\n      stroke: keys[bridgeKey(bridge)] ? 'red' : 'purple',\n      x1: bridge[0][0],\n      y1: bridge[0][1],\n      x2: bridge[1][0],\n      y2: bridge[1][1],\n    })));\n    Session.set('stage.points', this.endpoints.map((endpoint) => {\n      let color = endpoint.corner ? 'red' : 'black';\n      if (this.selected_point &&\n          Point.equal(endpoint.point, this.selected_point)) {\n        color = 'purple';\n      }\n      return {\n        cls: 'selectable',\n        cx: endpoint.point[0],\n        cy: endpoint.point[1],\n        fill: color,\n        stroke: color,\n      }\n    }));\n    const strokes = stroke_extractor.getStrokes(this.path, this.adjusted);\n    const n = strokes.strokes.length;\n    const message = `Extracted ${n} stroke${n == 1 ? '' : 's'}.`;\n    const entry = {cls: 'success', message: message};\n    Session.set('stage.status', strokes.log.concat([entry]));\n  }\n}\n\nexport {BridgesStage};\n"]},"sourceType":"module","externalDependencies":{},"hash":"30bf492de2f287921bfb057dcdcb9bd63400ed04"}
