{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/a37/code/github/makemeahanzi-tool/lib/glyphs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"lib/glyphs.js","filename":"/Users/a37/code/github/makemeahanzi-tool/lib/glyphs.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/a37/code/github/makemeahanzi-tool","root":"/Users/a37/code/github/makemeahanzi-tool","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/a37/code/github/makemeahanzi-tool/lib/glyphs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/glyphs.js"}},"code":"var _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 0);\nmodule.export({\n  Glyphs: function () {\n    return Glyphs;\n  },\n  Progress: function () {\n    return Progress;\n  }\n});\nvar assert;\nmodule.link(\"/lib/base\", {\n  assert: function (v) {\n    assert = v;\n  }\n}, 0);\nvar cjklib;\nmodule.link(\"/lib/cjklib\", {\n  cjklib: function (v) {\n    cjklib = v;\n  }\n}, 1);\n\nvar defaultGlyph = function (character) {\n  if (!character) return;\n  assert(character.length === 1);\n  var data = cjklib.getCharacterData(character);\n  var result = {\n    character: character,\n    codepoint: character.codePointAt(0),\n    metadata: {\n      frequency: data.frequency,\n      kangxi_index: data.kangxi_index\n    },\n    stages: {},\n    simplified: data.simplified,\n    traditional: data.traditional\n  };\n\n  if (data.simplified) {\n    var glyph = Glyphs.get(data.simplified);\n    var base = cjklib.getCharacterData(data.simplified);\n\n    if (glyph.stages.verified) {\n      var metadata = glyph.metadata;\n      result.metadata.definition = metadata.definition || base.definition;\n      result.metadata.pinyin = metadata.pinyin || base.pinyin;\n    }\n  }\n\n  return result;\n};\n\nvar Glyphs = new Mongo.Collection('glyphs');\nvar Progress = new Mongo.Collection('progress');\n\nGlyphs.clearDependencies = function (character) {\n  var stack = [character];\n  var visited = {};\n  visited[character] = true;\n\n  while (stack.length > 0) {\n    var current = stack.pop();\n    var dependencies = Glyphs.find({\n      'stages.analysis.decomposition': {\n        $regex: \".*\" + current + \".*\"\n      },\n      'stages.order': {\n        $ne: null\n      }\n    }, {\n      character: 1\n    }).fetch();\n    dependencies.map(function (x) {\n      return x.character;\n    }).filter(function (x) {\n      return !visited[x];\n    }).map(function (x) {\n      stack.push(x);\n      visited[x] = true;\n    });\n  }\n\n  delete visited[character];\n  Glyphs.update({\n    character: {\n      $in: Object.keys(visited)\n    }\n  }, {\n    $set: {\n      'stages.order': null,\n      'stages.verified': null\n    }\n  }, {\n    multi: true\n  });\n};\n\nGlyphs.get = function (character) {\n  return Glyphs.findOne({\n    character: character\n  }) || defaultGlyph(character);\n};\n\nGlyphs.getAll = function (characters) {\n  return Glyphs.find({\n    character: {\n      $in: characters\n    }\n  });\n};\n\nGlyphs.getNext = function (glyph, clause) {\n  clause = clause || {};\n  var codepoint = glyph ? glyph.codepoint : undefined;\n\n  var condition = _.extend({\n    codepoint: {\n      $gt: codepoint\n    }\n  }, clause);\n\n  var next = Glyphs.findOne(condition, {\n    sort: {\n      codepoint: 1\n    }\n  });\n  return next ? next : Glyphs.findOne(clause, {\n    sort: {\n      codepoint: 1\n    }\n  });\n};\n\nGlyphs.getNextUnverified = function (glyph) {\n  return Glyphs.getNext(glyph, {\n    'stages.verified': null\n  });\n};\n\nGlyphs.getNextVerified = function (glyph) {\n  return Glyphs.getNext(glyph, {\n    'stages.verified': {\n      $ne: null\n    }\n  });\n};\n\nGlyphs.getPrevious = function (glyph, clause) {\n  clause = clause || {};\n  var codepoint = glyph ? glyph.codepoint : undefined;\n\n  var condition = _.extend({\n    codepoint: {\n      $lt: codepoint\n    }\n  }, clause);\n\n  var previous = Glyphs.findOne(condition, {\n    sort: {\n      codepoint: -1\n    }\n  });\n  return previous ? previous : Glyphs.findOne(clause, {\n    sort: {\n      codepoint: -1\n    }\n  });\n};\n\nGlyphs.getPreviousUnverified = function (glyph) {\n  return Glyphs.getPrevious(glyph, {\n    'stages.verified': null\n  });\n};\n\nGlyphs.getPreviousVerified = function (glyph) {\n  return Glyphs.getPrevious(glyph, {\n    'stages.verified': {\n      $ne: null\n    }\n  });\n};\n\nGlyphs.loadAll = function (characters) {\n  for (var _iterator = _createForOfIteratorHelperLoose(characters), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    var glyph = Glyphs.get(character);\n\n    if (!glyph.stages.verified) {\n      Glyphs.upsert({\n        character: glyph.character\n      }, glyph);\n    }\n  }\n\n  Progress.refresh();\n};\n\nGlyphs.save = function (glyph) {\n  check(glyph.character, String);\n  assert(glyph.character.length === 1);\n  var current = Glyphs.get(glyph.character);\n\n  if (current && current.stages.verified && !glyph.stages.verified) {\n    Glyphs.clearDependencies(glyph.character);\n  }\n\n  Glyphs.syncDefinitionAndPinyin(glyph);\n\n  if (glyph.stages.path && !glyph.stages.path.sentinel) {\n    Glyphs.upsert({\n      character: glyph.character\n    }, glyph);\n  } else {\n    Glyphs.remove({\n      character: glyph.character\n    });\n  }\n\n  Progress.refresh();\n};\n\nGlyphs.syncDefinitionAndPinyin = function (glyph) {\n  var data = cjklib.getCharacterData(glyph.character);\n  var base = cjklib.getCharacterData(data.simplified || glyph.character);\n  var targets = [base.character].concat(base.traditional);\n\n  if (targets.length === 1 || '干么着复'.indexOf(targets[0]) >= 0) {\n    return;\n  }\n\n  var definition = glyph.metadata.definition || data.definition;\n  var pinyin = glyph.metadata.pinyin || data.pinyin;\n  Glyphs.update({\n    character: {\n      $in: targets\n    }\n  }, {\n    $set: {\n      'metadata.definition': definition,\n      'metadata.pinyin': pinyin\n    }\n  }, {\n    multi: true\n  });\n};\n\nProgress.refresh = function () {\n  var total = Glyphs.find().count();\n  var complete = Glyphs.find({\n    'stages.verified': {\n      $ne: null\n    }\n  }).count();\n  Progress.upsert({}, {\n    total: total,\n    complete: complete,\n    backup: false\n  });\n};\n\nif (Meteor.isServer) {\n  // Construct indices on the Glyphs table.\n  Glyphs._ensureIndex({\n    character: 1\n  }, {\n    unique: true\n  });\n\n  Glyphs._ensureIndex({\n    codepoint: 1\n  }, {\n    unique: true\n  });\n\n  Glyphs._ensureIndex({\n    'stages.verified': 1\n  }); // Refresh the Progress counter.\n\n\n  Progress.refresh(); // Register the methods above so they are available to the client.\n\n  var methods = {};\n  var method_names = ['get', 'getNext', 'getNextUnverified', 'getNextVerified', 'getPrevious', 'getPreviousUnverified', 'getPreviousVerified', 'save'];\n  method_names.map(function (name) {\n    return methods[name + \"Glyph\"] = Glyphs[name];\n  });\n  methods.loadAllGlyphs = Glyphs.loadAll;\n\n  methods.saveGlyphs = function (glyphs) {\n    return glyphs.map(Glyphs.save);\n  };\n\n  Meteor.methods(methods); // Publish accessors that will get all glyphs in a list and get the progress.\n\n  Meteor.publish('getAllGlyphs', Glyphs.getAll);\n  Meteor.publish('getProgress', Progress.find.bind(Progress));\n}","map":{"version":3,"sources":["lib/glyphs.js"],"names":["_createForOfIteratorHelperLoose","module","link","default","v","export","Glyphs","Progress","assert","cjklib","defaultGlyph","character","length","data","getCharacterData","result","codepoint","codePointAt","metadata","frequency","kangxi_index","stages","simplified","traditional","glyph","get","base","verified","definition","pinyin","Mongo","Collection","clearDependencies","stack","visited","current","pop","dependencies","find","$regex","$ne","fetch","map","x","filter","push","update","$in","Object","keys","$set","multi","findOne","getAll","characters","getNext","clause","undefined","condition","_","extend","$gt","next","sort","getNextUnverified","getNextVerified","getPrevious","$lt","previous","getPreviousUnverified","getPreviousVerified","loadAll","upsert","refresh","save","check","String","syncDefinitionAndPinyin","path","sentinel","remove","targets","concat","indexOf","total","count","complete","backup","Meteor","isServer","_ensureIndex","unique","methods","method_names","name","loadAllGlyphs","saveGlyphs","glyphs","publish","bind"],"mappings":"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","sourcesContent":["import {assert} from '/lib/base';\nimport {cjklib} from '/lib/cjklib';\n\nconst defaultGlyph = (character) => {\n  if (!character) return;\n  assert(character.length === 1);\n  const data = cjklib.getCharacterData(character);\n  const result = {\n    character: character,\n    codepoint: character.codePointAt(0),\n    metadata: {\n      frequency: data.frequency,\n      kangxi_index: data.kangxi_index,\n    },\n    stages: {},\n    simplified: data.simplified,\n    traditional: data.traditional,\n  }\n  if (data.simplified) {\n    const glyph = Glyphs.get(data.simplified);\n    const base = cjklib.getCharacterData(data.simplified);\n    if (glyph.stages.verified) {\n      const metadata = glyph.metadata;\n      result.metadata.definition = metadata.definition || base.definition;\n      result.metadata.pinyin = metadata.pinyin || base.pinyin;\n    }\n  }\n  return result;\n}\n\nconst Glyphs = new Mongo.Collection('glyphs');\nconst Progress = new Mongo.Collection('progress');\n\nGlyphs.clearDependencies = (character) => {\n  const stack = [character];\n  const visited = {};\n  visited[character] = true;\n  while (stack.length > 0) {\n    const current = stack.pop();\n    const dependencies = Glyphs.find({\n      'stages.analysis.decomposition': {$regex: `.*${current}.*`},\n      'stages.order': {$ne: null},\n    }, {character: 1}).fetch();\n    dependencies.map((x) => x.character).filter((x) => !visited[x]).map((x) => {\n      stack.push(x);\n      visited[x] = true;\n    });\n  }\n  delete visited[character];\n  Glyphs.update({character: {$in: Object.keys(visited)}},\n                {$set: {'stages.order': null, 'stages.verified': null}},\n                {multi: true});\n}\n\nGlyphs.get = (character) =>\n    Glyphs.findOne({character: character}) || defaultGlyph(character);\n\nGlyphs.getAll = (characters) => Glyphs.find({character: {$in: characters}});\n\nGlyphs.getNext = (glyph, clause) => {\n  clause = clause || {};\n  const codepoint = glyph ? glyph.codepoint : undefined;\n  const condition = _.extend({codepoint: {$gt: codepoint}}, clause);\n  const next = Glyphs.findOne(condition, {sort: {codepoint: 1}});\n  return next ? next : Glyphs.findOne(clause, {sort: {codepoint: 1}});\n}\n\nGlyphs.getNextUnverified = (glyph) => {\n  return Glyphs.getNext(glyph, {'stages.verified': null});\n}\n\nGlyphs.getNextVerified = (glyph) => {\n  return Glyphs.getNext(glyph, {'stages.verified': {$ne: null}});\n}\n\nGlyphs.getPrevious = (glyph, clause) => {\n  clause = clause || {};\n  const codepoint = glyph ? glyph.codepoint : undefined;\n  const condition = _.extend({codepoint: {$lt: codepoint}}, clause);\n  const previous = Glyphs.findOne(condition, {sort: {codepoint: -1}});\n  return previous ? previous : Glyphs.findOne(clause, {sort: {codepoint: -1}});\n}\n\nGlyphs.getPreviousUnverified = (glyph) => {\n  return Glyphs.getPrevious(glyph, {'stages.verified': null});\n}\n\nGlyphs.getPreviousVerified = (glyph) => {\n  return Glyphs.getPrevious(glyph, {'stages.verified': {$ne: null}});\n}\n\nGlyphs.loadAll = (characters) => {\n  for (let character of characters) {\n    const glyph = Glyphs.get(character);\n    if (!glyph.stages.verified) {\n      Glyphs.upsert({character: glyph.character}, glyph);\n    }\n  }\n  Progress.refresh();\n}\n\nGlyphs.save = (glyph) => {\n  check(glyph.character, String);\n  assert(glyph.character.length === 1);\n  const current = Glyphs.get(glyph.character);\n  if (current && current.stages.verified && !glyph.stages.verified) {\n    Glyphs.clearDependencies(glyph.character);\n  }\n  Glyphs.syncDefinitionAndPinyin(glyph);\n  if (glyph.stages.path && !glyph.stages.path.sentinel) {\n    Glyphs.upsert({character: glyph.character}, glyph);\n  } else {\n    Glyphs.remove({character: glyph.character});\n  }\n  Progress.refresh();\n}\n\nGlyphs.syncDefinitionAndPinyin = (glyph) => {\n  const data = cjklib.getCharacterData(glyph.character);\n  const base = cjklib.getCharacterData(data.simplified || glyph.character);\n  const targets = [base.character].concat(base.traditional);\n  if (targets.length === 1 || '干么着复'.indexOf(targets[0]) >= 0) {\n    return;\n  }\n  const definition = glyph.metadata.definition || data.definition;\n  const pinyin = glyph.metadata.pinyin || data.pinyin;\n  Glyphs.update({character: {$in: targets}}, {$set: {\n    'metadata.definition': definition,\n    'metadata.pinyin': pinyin,\n  }}, {multi: true});\n}\n\nProgress.refresh = () => {\n  const total = Glyphs.find().count();\n  const complete = Glyphs.find({'stages.verified': {$ne: null}}).count();\n  Progress.upsert({}, {total: total, complete: complete, backup: false});\n}\n\nif (Meteor.isServer) {\n  // Construct indices on the Glyphs table.\n  Glyphs._ensureIndex({character: 1}, {unique: true});\n  Glyphs._ensureIndex({codepoint: 1}, {unique: true});\n  Glyphs._ensureIndex({'stages.verified': 1});\n\n  // Refresh the Progress counter.\n  Progress.refresh();\n\n  // Register the methods above so they are available to the client.\n  const methods = {};\n  const method_names = [\n      'get', 'getNext', 'getNextUnverified', 'getNextVerified',\n      'getPrevious', 'getPreviousUnverified', 'getPreviousVerified', 'save'];\n  method_names.map((name) => methods[`${name}Glyph`] = Glyphs[name]);\n  methods.loadAllGlyphs = Glyphs.loadAll;\n  methods.saveGlyphs = (glyphs) => glyphs.map(Glyphs.save);\n  Meteor.methods(methods);\n\n  // Publish accessors that will get all glyphs in a list and get the progress.\n  Meteor.publish('getAllGlyphs', Glyphs.getAll);\n  Meteor.publish('getProgress', Progress.find.bind(Progress));\n}\n\nexport {Glyphs, Progress};\n"]},"sourceType":"module","externalDependencies":{},"hash":"6ba16118796659cebfcdd0036e550eb179b7f148"}
