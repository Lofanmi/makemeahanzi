{"head":"","body":"","js":"\nTemplate.__checkName(\"animation\");\nTemplate[\"animation\"] = new Template(\"Template.animation\", (function() {\n  var view = this;\n  return HTML.SVG({\n    version: \"1.1\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, \"\\n    \", HTML.G({\n    stroke: \"lightgray\",\n    \"stroke-dasharray\": \"1,1\",\n    \"stroke-width\": \"1\",\n    transform: \"scale(4, 4)\"\n  }, \"\\n      \", HTML.LINE({\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"256\",\n    y2: \"256\"\n  }), \"\\n      \", HTML.LINE({\n    x1: \"256\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"256\"\n  }), \"\\n      \", HTML.LINE({\n    x1: \"128\",\n    y1: \"0\",\n    x2: \"128\",\n    y2: \"256\"\n  }), \"\\n      \", HTML.LINE({\n    x1: \"0\",\n    y1: \"128\",\n    x2: \"256\",\n    y2: \"128\"\n  }), \"\\n    \"), \"\\n    \", HTML.G({\n    transform: \"scale(1, -1) translate(0, -900)\"\n  }, \"\\n      \", HTML.STYLE({\n    type: \"text/css\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"animations\"));\n  }, function() {\n    return [ \"\\n          @keyframes \", Blaze.View(\"lookup:keyframes\", function() {\n      return Spacebars.mustache(view.lookup(\"keyframes\"));\n    }), \" {\\n            from {\\n              stroke: blue;\\n              stroke-dashoffset: \", Blaze.View(\"lookup:offset\", function() {\n      return Spacebars.mustache(view.lookup(\"offset\"));\n    }), \";\\n              stroke-width: \", Blaze.View(\"lookup:width\", function() {\n      return Spacebars.mustache(view.lookup(\"width\"));\n    }), \";\\n            }\\n            \", Blaze.View(\"lookup:fraction\", function() {\n      return Spacebars.mustache(view.lookup(\"fraction\"));\n    }), \" {\\n              animation-timing-function: step-end;\\n              stroke: blue;\\n              stroke-dashoffset: 0;\\n              stroke-width: \", Blaze.View(\"lookup:width\", function() {\n      return Spacebars.mustache(view.lookup(\"width\"));\n    }), \";\\n            }\\n            to {\\n              stroke: black;\\n              stroke-width: 1024;\\n            }\\n          }\\n          #\", Blaze.View(\"lookup:animation_id\", function() {\n      return Spacebars.mustache(view.lookup(\"animation_id\"));\n    }), \" {\\n            animation: \", Blaze.View(\"lookup:keyframes\", function() {\n      return Spacebars.mustache(view.lookup(\"keyframes\"));\n    }), \" \", Blaze.View(\"lookup:duration\", function() {\n      return Spacebars.mustache(view.lookup(\"duration\"));\n    }), \" both;\\n            animation-delay: \", Blaze.View(\"lookup:delay\", function() {\n      return Spacebars.mustache(view.lookup(\"delay\"));\n    }), \";\\n            animation-timing-function: linear;\\n          }\\n        \" ];\n  }), \"\\n      \"), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"strokes\"));\n  }, function() {\n    return [ \"\\n        \", HTML.PATH({\n      d: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      fill: \"lightgray\"\n    }), \"\\n      \" ];\n  }), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"animations\"));\n  }, function() {\n    return [ \"\\n        \", HTML.CLIPPATH({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"clip_id\"));\n      }\n    }, \"\\n          \", HTML.PATH({\n      d: function() {\n        return Spacebars.mustache(view.lookup(\"stroke\"));\n      }\n    }), \"\\n        \"), \"\\n        \", HTML.PATH({\n      \"clip-path\": function() {\n        return [ \"url(#\", Spacebars.mustache(view.lookup(\"clip_id\")), \")\" ];\n      },\n      d: function() {\n        return Spacebars.mustache(view.lookup(\"d\"));\n      },\n      fill: \"none\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"animation_id\"));\n      },\n      \"stroke-dasharray\": function() {\n        return [ Spacebars.mustache(view.lookup(\"length\")), \" \", Spacebars.mustache(view.lookup(\"spacing\")) ];\n      },\n      \"stroke-linecap\": \"round\"\n    }), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n","bodyAttrs":{}}