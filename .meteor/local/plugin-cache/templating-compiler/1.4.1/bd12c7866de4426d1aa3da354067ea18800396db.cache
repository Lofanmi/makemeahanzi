{"head":"<title>Hanzi decomposition</title>","body":"","js":"\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"navbar\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"modal\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"editor\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"navbar\");\nTemplate[\"navbar\"] = new Template(\"Template.navbar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"navbar\",\n    class: \"navbar navbar-default navbar-static-top\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"container-fluid\"\n  }, HTML.Raw('\\n      <div class=\"navbar-header\">\\n        <div class=\"navbar-brand\">Hanzi decomposition</div>\\n      </div>\\n      '), HTML.DIV({\n    class: \"progress\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"progress-bar progress-bar-warning active\",\n    role: \"progressbar\",\n    style: function() {\n      return [ \"width: \", Spacebars.mustache(view.lookup(\"percent\")), \"%\" ];\n    },\n    \"aria-valuenow\": function() {\n      return Spacebars.mustache(view.lookup(\"percent\"));\n    },\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, \"\\n          \", HTML.SPAN(Blaze.View(\"lookup:complete\", function() {\n    return Spacebars.mustache(view.lookup(\"complete\"));\n  }), \"/\", Blaze.View(\"lookup:total\", function() {\n    return Spacebars.mustache(view.lookup(\"total\"));\n  })), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.DIV({\n    class: \"navbar-right\"\n  }, \"\\n        \", HTML.DIV({\n    class: function() {\n      return [ \"backup navbar-brand \", Spacebars.mustache(view.lookup(\"backup\")) ];\n    }\n  }, HTML.Raw(\"&#x270e;\")), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"modal\");\nTemplate[\"modal\"] = new Template(\"Template.modal\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"modal\",\n    class: \"modal fade\",\n    tabindex: \"2\",\n    \"data-backdrop\": \"static\",\n    \"data-keyboard\": \"false\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n      \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-body\"\n  }, Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n        \", HTML.DIV({\n    class: \"modal-footer\"\n  }, \"\\n          \", HTML.DIV({\n    class: \"progress\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"progress-bar progress-bar-striped active\",\n    role: \"progressbar\",\n    style: function() {\n      return [ \"width: \", Spacebars.mustache(view.lookup(\"percent\")), \"%\" ];\n    },\n    \"aria-valuenow\": function() {\n      return Spacebars.mustache(view.lookup(\"percent\"));\n    },\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"editor\");\nTemplate[\"editor\"] = new Template(\"Template.editor\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"editor\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"left-pane\"\n  }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"metadata\")), \"\\n      \", Spacebars.include(view.lookupTemplate(\"status\")), \"\\n    \"), \"\\n    \", HTML.SVG({\n    viewBox: \"0 0 1024 1024\"\n  }, \"\\n      \", HTML.G({\n    transform: \"scale(1, -1) translate(0, -900)\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"paths\"));\n  }, function() {\n    return [ \"\\n          \", HTML.PATH({\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"cls\"));\n      },\n      fill: function() {\n        return Spacebars.mustache(view.lookup(\"fill\"));\n      },\n      stroke: function() {\n        return Spacebars.mustache(view.lookup(\"stroke\"));\n      },\n      d: function() {\n        return Spacebars.mustache(view.lookup(\"d\"));\n      }\n    }), \"\\n        \" ];\n  }), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"lines\"));\n  }, function() {\n    return [ \"\\n          \", HTML.LINE({\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"cls\"));\n      },\n      stroke: function() {\n        return Spacebars.mustache(view.lookup(\"stroke\"));\n      },\n      \"stroke-width\": \"8\",\n      x1: function() {\n        return Spacebars.mustache(view.lookup(\"x1\"));\n      },\n      y1: function() {\n        return Spacebars.mustache(view.lookup(\"y1\"));\n      },\n      x2: function() {\n        return Spacebars.mustache(view.lookup(\"x2\"));\n      },\n      y2: function() {\n        return Spacebars.mustache(view.lookup(\"y2\"));\n      }\n    }), \"\\n        \" ];\n  }), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"points\"));\n  }, function() {\n    return [ \"\\n          \", HTML.CIRCLE({\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"cls\"));\n      },\n      fill: function() {\n        return Spacebars.mustache(view.lookup(\"fill\"));\n      },\n      stroke: function() {\n        return Spacebars.mustache(view.lookup(\"stroke\"));\n      },\n      cx: function() {\n        return Spacebars.mustache(view.lookup(\"cx\"));\n      },\n      cy: function() {\n        return Spacebars.mustache(view.lookup(\"cy\"));\n      },\n      r: \"8\"\n    }), \"\\n        \" ];\n  }), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"animations\"));\n  }, function() {\n    return [ \"\\n          \", HTML.CLIPPATH({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"clip\"));\n      }\n    }, \"\\n            \", HTML.PATH({\n      d: function() {\n        return Spacebars.mustache(view.lookup(\"stroke\"));\n      }\n    }), \"\\n          \"), \"\\n          \", HTML.PATH({\n      class: \"animation\",\n      \"clip-path\": function() {\n        return [ \"url(#\", Spacebars.mustache(view.lookup(\"clip\")), \")\" ];\n      },\n      d: function() {\n        return Spacebars.mustache(view.lookup(\"median\"));\n      },\n      \"stroke-dasharray\": function() {\n        return [ Spacebars.mustache(view.lookup(\"length\")), \" \", Spacebars.mustache(view.lookup(\"spacing\")) ];\n      },\n      \"stroke-dashoffset\": function() {\n        return Spacebars.mustache(view.lookup(\"advance\"));\n      }\n    }), \"\\n        \" ];\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"metadata\");\nTemplate[\"metadata\"] = new Template(\"Template.metadata\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"panel panel-primary metadata\",\n    style: function() {\n      return [ \"display: \", Spacebars.mustache(view.lookup(\"display\")), \";\" ];\n    }\n  }, \"\\n    \", HTML.DIV({\n    class: \"panel-heading\"\n  }, \"\\n      \", HTML.H3({\n    class: \"panel-title\"\n  }, \"\\n        Metadata for \", Blaze.View(\"lookup:rank\", function() {\n    return Spacebars.mustache(view.lookup(\"rank\"));\n  }), \" - \", Blaze.View(\"lookup:character\", function() {\n    return Spacebars.mustache(view.lookup(\"character\"));\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"simplified\"));\n  }, function() {\n    return [ \"\\n          - \", HTML.A({\n      href: function() {\n        return [ \"#\", Spacebars.mustache(view.lookup(\"simplified\")) ];\n      }\n    }, \"(simplified: \", Blaze.View(\"lookup:simplified\", function() {\n      return Spacebars.mustache(view.lookup(\"simplified\"));\n    }), \")\"), \"\\n        \" ];\n  }), \"\\n      \"), \"\\n    \"), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"items\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      class: \"field\"\n    }, \"\\n        \", HTML.LABEL({\n      class: \"control-label\"\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n        \", Blaze.View(\"lookup:editable\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"editable\"), view.lookup(\"field\"), view.lookup(\"value\")));\n    }), Blaze.View(\"lookup:separator\", function() {\n      return Spacebars.mustache(view.lookup(\"separator\"));\n    }), Blaze.View(\"lookup:extra\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"extra\")));\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", HTML.DIV({\n    class: \"field\"\n  }, HTML.Raw('\\n      <label class=\"control-label\">References:</label>\\n        '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"references\"));\n  }, function() {\n    return [ \"\\n          \", HTML.A({\n      class: \"reference\",\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"href\"));\n      },\n      target: \"_blank\"\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), HTML.Raw('\\n          <div class=\"separator\">â€¢</div>\\n        ') ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"status\");\nTemplate[\"status\"] = new Template(\"Template.status\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"panel panel-primary status\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"panel-heading\"\n  }, \"\\n      \", HTML.H3({\n    class: \"panel-title\"\n  }, \"Edit \", Blaze.View(\"lookup:stage\", function() {\n    return Spacebars.mustache(view.lookup(\"stage\"));\n  })), \"\\n    \"), \"\\n    \", HTML.DIV({\n    class: function() {\n      return [ \"template \", Spacebars.mustache(view.lookup(\"template\")) ];\n    }\n  }, \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"template\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n    \"), \"\\n    \", HTML.UL({\n    class: \"log\"\n  }, \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"lines\"));\n  }, function() {\n    return [ \"\\n        \", HTML.LI({\n      class: function() {\n        return [ \"line \", Spacebars.mustache(view.lookup(\"cls\")) ];\n      }\n    }, Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    })), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n","bodyAttrs":{}}